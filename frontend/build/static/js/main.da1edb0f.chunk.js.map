{"version":3,"sources":["constants/stocksConstants.js","constants/userConstants.js","constants/portfolioConstants.js","store.js","reducers/stocksReducers.js","reducers/userReducers.js","reducers/portfolioReducers.js","components/SearchBox.js","components/Header.js","actions/userActions.js","components/Loader.js","components/Message.js","actions/portfolioAction.js","components/ModalForm.js","components/ColoredCodecNumber.js","components/StockList.js","actions/stocksAction.js","screens/HomeScreen.js","components/Paginate.js","screens/SearchScreen.js","screens/StockDetailsScreen.js","screens/TopGainersScreen.js","screens/TopLosersScreen.js","components/FormContainer.js","screens/LogInScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/PortfolioScreen.js","screens/PortfolioDetailsScreen.js","App.js","reportWebVitals.js","index.js"],"names":["STOCKS_LIST_REQUEST","STOCKS_LIST_SUCCESS","STOCKS_LIST_FAIL","STOCKS_DETAILS_REQUEST","STOCKS_DETAILS_SUCCESS","STOCKS_DETAILS_FAIL","STOCKS_TOP_GAINER_REQUEST","STOCKS_TOP_GAINER_SUCCESS","STOCKS_TOP_GAINER_FAIL","STOCKS_TOP_LOSER_REQUEST","STOCKS_TOP_LOSER_SUCCESS","STOCKS_TOP_LOSER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","PORTFOLIO_CREATE_REQUEST","PORTFOLIO_CREATE_SUCCESS","PORTFOLIO_CREATE_FAIL","PORTFOLIO_REQUEST","PORTFOLIO_SUCCESS","PORTFOLIO_FAIL","PORTFOLIO_DELETE_REQUEST","PORTFOLIO_DELETE_SUCCESS","PORTFOLIO_DELETE_FAIL","PORTFOLIO_DETAILS_REQUEST","PORTFOLIO_DETAILS_SUCCESS","PORTFOLIO_DETAILS_FAIL","PORTFOLIO_RECORD_CREATE_REQUEST","PORTFOLIO_RECORD_CREATE_SUCCESS","PORTFOLIO_RECORD_CREATE_FAIL","PORTFOLIO_RECORD_DELETE_REQUEST","PORTFOLIO_RECORD_DELETE_SUCCESS","PORTFOLIO_RECORD_DELETE_FAIL","PORTFOLIO_DETAILS_UPDATE_REQUEST","PORTFOLIO_DETAILS_UPDATE_SUCCESS","PORTFOLIO_DETAILS_UPDATE_FAIL","PORTFOLIO_RECORD_UPDATE_REQUEST","PORTFOLIO_RECORD_UPDATE_SUCCESS","PORTFOLIO_RECORD_UPDATE_FAIL","reducer","combineReducers","stocksList","state","stocks","action","type","loading","payload","page","pages","error","stocksTopGainersList","stockDetailsList","stock","stocksTopLosersList","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","portfolioList","portfolios","index","findIndex","x","id","name","updatedAt","filter","parseInt","portfolioDetails","portfolio","records","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","onChange","target","value","className","Button","variant","Header","useSelector","dispatch","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Loader","Spinner","animation","role","style","margin","height","width","display","Message","children","Alert","getPortfolio","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","createPortfolioRecord","record","post","ModalForm","show","onClose","body","Modal","size","centered","Title","Body","ColoredCodecNumber","prefix","StockList","seeMoreLink","showAddToPortfolioButton","prev","search","selectedStocks","setSelectedStocks","addModalShow","setAddModalShow","addToPortfolioButton","useRef","useEffect","handler","current","contains","window","addEventListener","removeEventListener","length","disabled","handleStockCheckboxClick","stockSymbol","prevSelectedStock","find","handelAddRecordInPortfolio","currentTarget","forEach","item","symbol","trade_date","Date","shares","cost_per_share","notes","map","cursor","ref","Table","striped","responsive","hover","Check","label","price","change_amount","change_percent","listStocks","listStocksTopGainers","listStocksTopLosers","HomeScreen","Row","Col","sm","md","ink","slice","Paginate","link","keywords","extra","split","page_lower_index","Math","max","page_upper_index","min","Pagination","Array","fill","i","active","SearchScreen","searchKey","StockDetailsScreen","match","params","ListGroup","prev_close_value","open_value","bid_value","bid_quantity","ask_value","ask_quantity","days_low","days_high","fifty_two_week_low","fifty_two_week_high","volume","avg_volume","market_cap","pe_ratio","eps_ratio","forward_dividend_yield","TopGainersScreen","total","TopLosersScreen","FormContainer","xs","LogInScreen","email","setEmail","password","setPassword","redirect","setItem","stringify","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","_id","put","updateUserProfile","PortfolioScreen","path","createModalShow","setCreateModalShow","updateModalShow","setUpdateModalShow","portfolioName","setPortfolioName","selectedPortfolio","setSelectedPortfolio","handelDeletePortfolio","portfolio_id","delete","handelUpdatePortfolioSubmit","updatePortfolioDetails","symbols","market_value","day_change_value","day_change_percent","total_change","total_change_percent","PortfolioDetailsScreen","symbolInputRef","symbolSelectRef","searchStocks","setSearchStocks","selectedRecord","setSelectedRecord","setSymbol","tradeDate","setTradeDate","today","setShares","costPerShares","setCostPerShares","setNotes","handelUpdateRecordSubmit","updatePortfolioRecord","handelDeleteRecord","position","boxShadow","zIndex","selected","maxDate","step","symbol_price","change_value","gain_value","gain_percent","total_gain","App","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da1edb0f.chunk.js","sourcesContent":["export const STOCKS_LIST_REQUEST = 'STOCKS_LIST_REQUEST'\r\nexport const STOCKS_LIST_SUCCESS = 'STOCKS_LIST_SUCCESS'\r\nexport const STOCKS_LIST_FAIL = 'STOCKS_LIST_FAIL'\r\n\r\nexport const STOCKS_DETAILS_REQUEST = 'STOCKS_DETAILS_REQUEST'\r\nexport const STOCKS_DETAILS_SUCCESS = 'STOCKS_DETAILS_SUCCESS'\r\nexport const STOCKS_DETAILS_FAIL = 'STOCKS_DETAILS_FAIL'\r\n\r\nexport const STOCKS_TOP_GAINER_REQUEST = 'STOCKS_TOP_GAINER_REQUEST'\r\nexport const STOCKS_TOP_GAINER_SUCCESS = 'STOCKS_TOP_GAINER_SUCCESS'\r\nexport const STOCKS_TOP_GAINER_FAIL = 'STOCKS_TOP_GAINER_FAIL'\r\n\r\nexport const STOCKS_TOP_LOSER_REQUEST = 'STOCKS_TOP_LOSER_REQUEST'\r\nexport const STOCKS_TOP_LOSER_SUCCESS = 'STOCKS_TOP_LOSER_SUCCESS'\r\nexport const STOCKS_TOP_LOSER_FAIL = 'STOCKS_TOP_LOSER_FAIL'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const PORTFOLIO_CREATE_REQUEST = 'PORTFOLIO_CREATE_REQUEST'\r\nexport const PORTFOLIO_CREATE_SUCCESS = 'PORTFOLIO_CREATE_SUCCESS'\r\nexport const PORTFOLIO_CREATE_FAIL = 'PORTFOLIO_CREATE_FAIL'\r\n\r\nexport const PORTFOLIO_CREATE_RESET = 'PORTFOLIO_CREATE_RESET'\r\n\r\nexport const PORTFOLIO_REQUEST = 'PORTFOLIO_REQUEST'\r\nexport const PORTFOLIO_SUCCESS = 'PORTFOLIO_SUCCESS'\r\nexport const PORTFOLIO_FAIL = 'PORTFOLIO_FAIL'\r\n\r\nexport const PORTFOLIO_DELETE_REQUEST = 'PORTFOLIO_DELETE_REQUEST'\r\nexport const PORTFOLIO_DELETE_SUCCESS = 'PORTFOLIO_DELETE_SUCCESS'\r\nexport const PORTFOLIO_DELETE_FAIL = 'PORTFOLIO_DELETE_FAIL'\r\n\r\nexport const PORTFOLIO_DETAILS_REQUEST = 'PORTFOLIO_DETAILS_REQUEST'\r\nexport const PORTFOLIO_DETAILS_SUCCESS = 'PORTFOLIO_DETAILS_SUCCESS'\r\nexport const PORTFOLIO_DETAILS_FAIL = 'PORTFOLIO_DETAILS_FAIL'\r\n\r\nexport const PORTFOLIO_RECORD_CREATE_REQUEST = 'PORTFOLIO_RECORD_CREATE_REQUEST'\r\nexport const PORTFOLIO_RECORD_CREATE_SUCCESS = 'PORTFOLIO_RECORD_CREATE_SUCCESS'\r\nexport const PORTFOLIO_RECORD_CREATE_FAIL = 'PORTFOLIO_RECORD_CREATE_FAIL'\r\n\r\nexport const PORTFOLIO_RECORD_DELETE_REQUEST = 'PORTFOLIO_RECORD_DELETE_REQUEST'\r\nexport const PORTFOLIO_RECORD_DELETE_SUCCESS = 'PORTFOLIO_RECORD_DELETE_SUCCESS'\r\nexport const PORTFOLIO_RECORD_DELETE_FAIL = 'PORTFOLIO_RECORD_DELETE_FAIL'\r\n\r\nexport const PORTFOLIO_DETAILS_UPDATE_REQUEST = 'PORTFOLIO_DETAILS_UPDATE_REQUEST'\r\nexport const PORTFOLIO_DETAILS_UPDATE_SUCCESS = 'PORTFOLIO_DETAILS_UPDATE_SUCCESS'\r\nexport const PORTFOLIO_DETAILS_UPDATE_FAIL = 'PORTFOLIO_DETAILS_UPDATE_FAIL'\r\n\r\nexport const PORTFOLIO_RECORD_UPDATE_REQUEST = 'PORTFOLIO_RECORD_UPDATE_REQUEST'\r\nexport const PORTFOLIO_RECORD_UPDATE_SUCCESS = 'PORTFOLIO_RECORD_UPDATE_SUCCESS'\r\nexport const PORTFOLIO_RECORD_UPDATE_FAIL = 'PORTFOLIO_RECORD_UPDATE_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { \r\n    stocksListReducer, \r\n    stocksTopGainersReducer, \r\n    stockDetailsReducer, \r\n    stocksTopLosersReducer \r\n} from './reducers/stocksReducers'\r\n\r\nimport { \r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer \r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    portfolioReducer,\r\n    portfolioDetailsReducer\r\n} from './reducers/portfolioReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    stocksList: stocksListReducer,\r\n    stocksTopGainersList: stocksTopGainersReducer,\r\n    stockDetailsList: stockDetailsReducer,\r\n    stocksTopLosersList: stocksTopLosersReducer,\r\n    \r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n\r\n    portfolioList: portfolioReducer,\r\n    portfolioDetails: portfolioDetailsReducer\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    STOCKS_LIST_REQUEST,\r\n    STOCKS_LIST_SUCCESS,\r\n    STOCKS_LIST_FAIL,\r\n\r\n    STOCKS_DETAILS_REQUEST,\r\n    STOCKS_DETAILS_SUCCESS,\r\n    STOCKS_DETAILS_FAIL,\r\n\r\n    STOCKS_TOP_GAINER_REQUEST,\r\n    STOCKS_TOP_GAINER_SUCCESS,\r\n    STOCKS_TOP_GAINER_FAIL,\r\n\r\n    STOCKS_TOP_LOSER_REQUEST,\r\n    STOCKS_TOP_LOSER_SUCCESS,\r\n    STOCKS_TOP_LOSER_FAIL,\r\n} from '../constants/stocksConstants'\r\n\r\nexport const stocksListReducer = (state = { stocks: [] }, action) => {\r\n    switch (action.type) {\r\n        case STOCKS_LIST_REQUEST:\r\n            return { loading: true, stocks: [] }\r\n\r\n        case STOCKS_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                stocks: action.payload.stocks,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case STOCKS_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const stockDetailsReducer = (state = { stock: {} }, action) => {\r\n    switch (action.type) {\r\n        case STOCKS_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case STOCKS_DETAILS_SUCCESS:\r\n            return { loading: false, stock: action.payload }\r\n\r\n        case STOCKS_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const stocksTopGainersReducer = (state = { stocks: [] }, action) => {\r\n    switch (action.type) {\r\n        case STOCKS_TOP_GAINER_REQUEST:\r\n            return { loading: true, stocks: [] }\r\n\r\n        case STOCKS_TOP_GAINER_SUCCESS:\r\n            return { loading: false, stocks: action.payload, }\r\n\r\n        case STOCKS_TOP_GAINER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const stocksTopLosersReducer = (state = { stocks: [] }, action) => {\r\n    switch (action.type) {\r\n        case STOCKS_TOP_LOSER_REQUEST:\r\n            return { loading: true, stocks: [] }\r\n\r\n        case STOCKS_TOP_LOSER_SUCCESS:\r\n            return { loading: false, stocks: action.payload, }\r\n\r\n        case STOCKS_TOP_LOSER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\nPORTFOLIO_CREATE_REQUEST,\r\nPORTFOLIO_CREATE_SUCCESS,\r\nPORTFOLIO_CREATE_FAIL,\r\n\r\nPORTFOLIO_REQUEST,\r\nPORTFOLIO_SUCCESS,\r\nPORTFOLIO_FAIL,\r\n\r\nPORTFOLIO_DELETE_REQUEST,\r\nPORTFOLIO_DELETE_SUCCESS,\r\nPORTFOLIO_DELETE_FAIL,\r\n\r\nPORTFOLIO_DETAILS_REQUEST,\r\nPORTFOLIO_DETAILS_SUCCESS,\r\nPORTFOLIO_DETAILS_FAIL,\r\n\r\nPORTFOLIO_RECORD_CREATE_REQUEST,\r\nPORTFOLIO_RECORD_CREATE_SUCCESS,\r\nPORTFOLIO_RECORD_CREATE_FAIL,\r\n\r\nPORTFOLIO_RECORD_DELETE_REQUEST,\r\nPORTFOLIO_RECORD_DELETE_SUCCESS,\r\nPORTFOLIO_RECORD_DELETE_FAIL,\r\n\r\nPORTFOLIO_DETAILS_UPDATE_REQUEST,\r\nPORTFOLIO_DETAILS_UPDATE_SUCCESS,\r\nPORTFOLIO_DETAILS_UPDATE_FAIL,\r\n\r\nPORTFOLIO_RECORD_UPDATE_REQUEST,\r\nPORTFOLIO_RECORD_UPDATE_SUCCESS,\r\nPORTFOLIO_RECORD_UPDATE_FAIL\r\n\r\n} from '../constants/portfolioConstants'\r\n\r\n\r\nexport const portfolioReducer = (state = { loading: true, portfolios: [] }, action) => {\r\n    switch (action.type) {\r\n        case PORTFOLIO_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                portfolios: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                portfolios: [...state.portfolios, action.payload]\r\n            }\r\n\r\n        case PORTFOLIO_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_DETAILS_UPDATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case PORTFOLIO_DETAILS_UPDATE_SUCCESS:\r\n            const index = state.portfolios.findIndex(x => x.id === action.payload.id)\r\n            state.portfolios[index].name = action.payload.name\r\n            state.portfolios[index].updatedAt = action.payload.updatedAt\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolios: state.portfolios,\r\n                success: true\r\n            }\r\n\r\n        case PORTFOLIO_DETAILS_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_DELETE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case PORTFOLIO_DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolios: state.portfolios.filter(x => x.id !== parseInt(action.payload)),\r\n                success: true\r\n            }\r\n\r\n        case PORTFOLIO_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const portfolioDetailsReducer = (state = { loading: true, portfolio: { records: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PORTFOLIO_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                portfolio: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_CREATE_SUCCESS:\r\n            state.portfolio.records = [...state.portfolio.records, action.payload]\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolio: state.portfolio\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_UPDATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_UPDATE_SUCCESS:\r\n            const index = state.portfolio.records.findIndex(x => x.id === action.payload.id)\r\n            state.portfolio.records[index] = action.payload\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolio: state.portfolio,\r\n                success: true\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case PORTFOLIO_RECORD_DELETE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_DELETE_SUCCESS:\r\n            state.portfolio.records = state.portfolio.records.filter(x => x.id !== parseInt(action.payload))\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolio: state.portfolio\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/search/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nexport default function Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>SE Helper</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n\r\n                            {userInfo ? (\r\n                                <>\r\n                                    <LinkContainer to='/portfolios'>\r\n                                        <Nav.Link >My Portfolio</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown title={userInfo.name} id='username'>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                    </NavDropdown>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link>Login</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/register'>\r\n                                    <Nav.Link>Register</Nav.Link>\r\n                                </LinkContainer>\r\n                                </>\r\n                            )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='admin-menu'>\r\n                                    <LinkContainer to='/admin/user-list'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/portfolio-list'>\r\n                                        <NavDropdown.Item>Portfolio List</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/wishlist-list'>\r\n                                        <NavDropdown.Item>Wishlist List</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL\r\n} from '../constants/userConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='grow'\r\n            role='status'\r\n            variant=\"success\"\r\n            style={{\r\n                margin: '100px auto',\r\n                height: '100px',\r\n                width: '100px',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import axios from 'axios'\r\nimport {\r\n    PORTFOLIO_CREATE_REQUEST,\r\n    PORTFOLIO_CREATE_SUCCESS,\r\n    PORTFOLIO_CREATE_FAIL,\r\n\r\n    PORTFOLIO_REQUEST,\r\n    PORTFOLIO_SUCCESS,\r\n    PORTFOLIO_FAIL,\r\n\r\n    PORTFOLIO_DELETE_REQUEST,\r\n    PORTFOLIO_DELETE_SUCCESS,\r\n    PORTFOLIO_DELETE_FAIL,\r\n\r\n    PORTFOLIO_DETAILS_REQUEST,\r\n    PORTFOLIO_DETAILS_SUCCESS,\r\n    PORTFOLIO_DETAILS_FAIL,\r\n\r\n    PORTFOLIO_RECORD_CREATE_REQUEST,\r\n    PORTFOLIO_RECORD_CREATE_SUCCESS,\r\n    PORTFOLIO_RECORD_CREATE_FAIL,\r\n\r\n    PORTFOLIO_RECORD_DELETE_REQUEST,\r\n    PORTFOLIO_RECORD_DELETE_SUCCESS,\r\n    PORTFOLIO_RECORD_DELETE_FAIL,\r\n\r\n    PORTFOLIO_DETAILS_UPDATE_REQUEST,\r\n    PORTFOLIO_DETAILS_UPDATE_SUCCESS,\r\n    PORTFOLIO_DETAILS_UPDATE_FAIL,\r\n\r\n    PORTFOLIO_RECORD_UPDATE_REQUEST,\r\n    PORTFOLIO_RECORD_UPDATE_SUCCESS,\r\n    PORTFOLIO_RECORD_UPDATE_FAIL\r\n\r\n} from '../constants/portfolioConstants'\r\n\r\n\r\nexport const createPortfolio = (portfolio) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/portfolio/`,\r\n            portfolio,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getPortfolio = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/portfolio/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deletePortfolio = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/portfolio/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_DELETE_SUCCESS,\r\n            payload: id\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getPortfolioDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/portfolio/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createPortfolioRecord = ({ id, record }) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/portfolio/${id}/record/`,\r\n            record,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePortfolioRecord = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/portfolio/record/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_DELETE_SUCCESS,\r\n            payload: id\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updatePortfolioDetails = ({ id, portfolio }) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/portfolio/${id}/`,\r\n            portfolio,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePortfolioRecord = ({ id, record }) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/portfolio/record/${id}/`,\r\n            record,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nexport default function ModalForm({ show, onClose, title, body }) {\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {body}\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function ColoredCodecNumber({ value, prefix }) {\r\n    return (\r\n        <p className={value > 0 ? \"text-success\" : value < 0 ? \"text-danger\" : \"\"}>\r\n            {value > 0 ? \"+\" + value : value}{prefix}\r\n        </p>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Form, Table } from 'react-bootstrap'\r\nimport { FaRegStar } from \"react-icons/fa\"\r\nimport { Link } from 'react-router-dom'\r\nimport { getPortfolio, createPortfolioRecord } from '../actions/portfolioAction'\r\nimport ModalForm from '../components/ModalForm'\r\nimport ColoredCodecNumber from '../components/ColoredCodecNumber'\r\n\r\n\r\nexport default function StockList({ title, seeMoreLink, showAddToPortfolioButton, stocks }) {\r\n\r\n    let history = useHistory()\r\n    const prev = history.location.search ? history.location.pathname + history.location.search : history.location.pathname\r\n\r\n    const [selectedStocks, setSelectedStocks] = useState([])\r\n    const [addModalShow, setAddModalShow] = useState(false)\r\n    const addToPortfolioButton = useRef()\r\n\r\n    const dispatch = useDispatch()\r\n    const portfolioList = useSelector(state => state.portfolioList)\r\n    const { portfolios } = portfolioList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        const handler = (e) => {\r\n            if (addToPortfolioButton.current?.contains(e.target)) {\r\n                setAddModalShow(true)\r\n            }\r\n        }\r\n        window.addEventListener(\"click\", handler)\r\n        return () => window.removeEventListener('click', handler)\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getPortfolio())\r\n        if (showAddToPortfolioButton && selectedStocks.length === 0) {\r\n            addToPortfolioButton.current.disabled = true\r\n        }\r\n        if (showAddToPortfolioButton && selectedStocks.length > 0) {\r\n            addToPortfolioButton.current.disabled = false\r\n        }\r\n    }, [dispatch, showAddToPortfolioButton, selectedStocks])\r\n\r\n    const handleStockCheckboxClick = (e) => {\r\n        let stockSymbol = e.target.value\r\n        setSelectedStocks(prevSelectedStock => {\r\n            if (prevSelectedStock.find(x => x === stockSymbol)) {\r\n                return prevSelectedStock.filter(x => x !== stockSymbol)\r\n            } else {\r\n                return [...prevSelectedStock, stockSymbol]\r\n            }\r\n        })\r\n    }\r\n\r\n    const handelAddRecordInPortfolio = (e) => {\r\n        const id = e.currentTarget.value\r\n        selectedStocks.forEach((item) => {\r\n            let record = {\r\n                symbol: item,\r\n                trade_date: new Date(),\r\n                shares: 0,\r\n                cost_per_share: 0,\r\n                notes: ''\r\n            }\r\n            dispatch(createPortfolioRecord({ id: id, record: record }))\r\n            history.push(`/portfolio/${id}/`)\r\n        })   \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-between align-items-baseline\">\r\n                <h4>{title}</h4>\r\n                {showAddToPortfolioButton && userInfo ?\r\n                    <>\r\n                        <ModalForm\r\n                            show={addModalShow}\r\n                            size=\"sm\"\r\n                            title=\"Choose Portfolio to add the stocks\"\r\n                            body={\r\n                                (\r\n                                    <>\r\n                                        <div className=\"d-grid gap-2\">\r\n                                            {portfolios.map(portfolio => (\r\n                                                <div key={portfolio.id}>\r\n                                                    <Button \r\n                                                        variant=\"link\"\r\n                                                        value={portfolio.id}\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        onClick={handelAddRecordInPortfolio}>\r\n                                                        {portfolio.name}\r\n                                                    </Button>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                        <Button className=\"mt-3 float-right\" onClick={() => setAddModalShow(false)} variant=\"secondary\">\r\n                                            Close\r\n                                        </Button>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        />\r\n                        <Button \r\n                            disabled \r\n                            ref={addToPortfolioButton}\r\n                            variant=\"outline-info\" \r\n                            size=\"sm\" \r\n                            className=\"d-flex align-items-center\">\r\n                            <FaRegStar size=\"1rem\" className=\"mr-2\" />  Add To Portfolio\r\n                        </Button>\r\n                    </>\r\n                    : \"\"\r\n                }\r\n                {seeMoreLink && <Link to={seeMoreLink}>See More...</Link>}\r\n            </div>\r\n            <Table striped responsive hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th><small>Symbol</small></th>\r\n                        <th><small>Last Price</small></th>\r\n                        <th><small>Change</small></th>\r\n                        <th><small>% Change</small></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {stocks?.map(stock => (\r\n                        <tr key={stock.symbol}>\r\n                            <td>\r\n                                {showAddToPortfolioButton && userInfo ? <Form.Check\r\n                                        type=\"checkbox\"\r\n                                        id=\"default-checkbox\"\r\n                                        onChange={handleStockCheckboxClick}\r\n                                        value={stock.symbol}\r\n                                        label={<Link to={`/stock/${stock.symbol}/?prev=${prev}`}>{stock.symbol}</Link>}\r\n                                    />\r\n                                    :\r\n                                    <Link to={`/stock/${stock.symbol}/?prev=${prev}`}>{stock.symbol}</Link>\r\n                                }\r\n                                <div><small>{stock.name}</small></div>\r\n                            </td>\r\n                            <td>{stock.price}</td>\r\n                            <td>\r\n                                <ColoredCodecNumber value={stock.change_amount} />\r\n                            </td>\r\n                            <td>\r\n                                <ColoredCodecNumber value={stock.change_percent} prefix=\"%\" />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    STOCKS_LIST_REQUEST,\r\n    STOCKS_LIST_SUCCESS,\r\n    STOCKS_LIST_FAIL,\r\n\r\n    STOCKS_DETAILS_REQUEST,\r\n    STOCKS_DETAILS_SUCCESS,\r\n    STOCKS_DETAILS_FAIL,\r\n    \r\n    STOCKS_TOP_GAINER_REQUEST,\r\n    STOCKS_TOP_GAINER_SUCCESS,\r\n    STOCKS_TOP_GAINER_FAIL,\r\n\r\n    STOCKS_TOP_LOSER_REQUEST,\r\n    STOCKS_TOP_LOSER_SUCCESS,\r\n    STOCKS_TOP_LOSER_FAIL,\r\n} from '../constants/stocksConstants'\r\n\r\nexport const listStocks = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: STOCKS_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/stocks/${keyword}`)\r\n\r\n        dispatch({\r\n            type: STOCKS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: STOCKS_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStockDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: STOCKS_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/stocks/${id}/`)\r\n\r\n        dispatch({\r\n            type: STOCKS_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: STOCKS_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStocksTopGainers = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: STOCKS_TOP_GAINER_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/stocks/top-gainers/${keyword}`)\r\n\r\n        dispatch({\r\n            type: STOCKS_TOP_GAINER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: STOCKS_TOP_GAINER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStocksTopLosers = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: STOCKS_TOP_LOSER_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/stocks/top-losers/${keyword}`)\r\n\r\n        dispatch({\r\n            type: STOCKS_TOP_LOSER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: STOCKS_TOP_LOSER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport StockList from '../components/StockList'\r\nimport { listStocksTopLosers, listStocksTopGainers } from '../actions/stocksAction'\r\n\r\nexport default function HomeScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const stocksTopLosersList = useSelector(state => state.stocksTopLosersList)\r\n\r\n    const stocksTopGainersList = useSelector(state => state.stocksTopGainersList)\r\n\r\n    useEffect(() => {\r\n        dispatch(listStocksTopGainers())\r\n        dispatch(listStocksTopLosers())\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                {(stocksTopLosersList.loading && stocksTopGainersList.loading) ? <Loader /> \r\n                    :\r\n                    (\r\n                        <>\r\n                            <Col sm={12} md={6}>\r\n                                {stocksTopGainersList.error ? <Message variant='danger'>{stocksTopGainersList.error}</Message>\r\n                                        :\r\n                                        <div className=\"py-5\">\r\n                                            <StockList title=\"Stocks: Gainers\" seeMoreLink=\"top-gainers\"ink=\"top-gainers\" stocks={stocksTopGainersList.stocks.stocks?.slice(0, 5)} />\r\n                                        </div>\r\n                                }\r\n                            </Col>\r\n                            <Col sm={12} md={6}>\r\n                                {stocksTopLosersList.error ? <Message variant='danger'>{stocksTopLosersList.error}</Message>\r\n                                    :\r\n                                    <div className=\"py-5\">\r\n                                        <StockList title=\"Stocks: Losers\" seeMoreLink=\"top-losers\" stocks={stocksTopLosersList.stocks.stocks?.slice(0, 5)} />\r\n                                    </div>\r\n                                }\r\n                            </Col>\r\n                        </>\r\n                    )\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, link = '', keywords, extra }) {\r\n\r\n    if (keywords) {\r\n        keywords = keywords.split('?')[1].split('&')[0]\r\n    }\r\n\r\n    const page_lower_index = Math.max((page - 1) - (extra / 2), 0)\r\n    const page_upper_index = Math.min((page - 1) + (extra / 2), pages - 1)\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n\r\n            {page > 1 && (\r\n                    <>\r\n                        <LinkContainer\r\n                            key=\"first\"\r\n                            to={`/${link}/?${keywords}&page=${1}`}\r\n                        >\r\n                            <Pagination.Item>First</Pagination.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer\r\n                            key=\"prev\"\r\n                            to={`/${link}/?${keywords}&page=${page - 1}`}\r\n                        >\r\n                            <Pagination.Item>Prev</Pagination.Item>\r\n                        </LinkContainer>\r\n                    </>\r\n                )\r\n            }\r\n\r\n            {[...Array(page_upper_index - page_lower_index + 1)\r\n            .fill()\r\n            .map((x, i) => page_lower_index + i)\r\n            ]\r\n                .map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={`/${link}/?${keywords}&page=${x + 1}`}\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n\r\n            <LinkContainer\r\n                key=\"next\"\r\n                to={`/${link}/?${keywords}&page=${page + 1}`}\r\n            >\r\n                <Pagination.Item>Next</Pagination.Item>\r\n            </LinkContainer>\r\n\r\n            <LinkContainer\r\n                key=\"last\"\r\n                to={`/${link}/?${keywords}&page=${pages}`}\r\n            >\r\n                <Pagination.Item>Last</Pagination.Item>\r\n            </LinkContainer>\r\n\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport StockList from '../components/StockList'\r\nimport { listStocks } from '../actions/stocksAction'\r\n\r\n\r\nexport default function SearchScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const stocksList = useSelector(state => state.stocksList)\r\n    const { error, loading, stocks, page, pages } = stocksList\r\n\r\n    let keyword = history.location.search\r\n    const searchKey = keyword.split('?keyword=')[1].split('&')[0]\r\n\r\n    useEffect(() => {\r\n        dispatch(listStocks(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    if (loading)\r\n        return <Loader />\r\n    return (\r\n        <div>\r\n            {error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                <div>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"py-5\">\r\n                                <StockList title={`Stocks Search: ${searchKey}`} showAddToPortfolioButton={true} stocks={stocks} />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keywords={keyword} link=\"search\" extra={2} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, ListGroup } from 'react-bootstrap'\r\nimport { FaRegStar } from \"react-icons/fa\"\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport ModalForm from '../components/ModalForm'\r\nimport { listStockDetails } from '../actions/stocksAction'\r\nimport { getPortfolio, createPortfolioRecord } from '../actions/portfolioAction'\r\n\r\nexport default function StockDetailsScreen({ location, match }) {\r\n\r\n    let history = useHistory()\r\n\r\n    const [addModalShow, setAddModalShow] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const stockDetailsList = useSelector(state => state.stockDetailsList)\r\n    const { error, stock } = stockDetailsList\r\n\r\n    const portfolioList = useSelector(state => state.portfolioList)\r\n    const { loading, portfolios } = portfolioList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const prev = location.search ? location.search.split('?prev=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        dispatch(getPortfolio())\r\n        dispatch(listStockDetails(match.params.id))\r\n    }, [dispatch, match])\r\n\r\n    const handelAddRecordInPortfolio = (e) => {\r\n        const id = e.currentTarget.value\r\n        let record = {\r\n            symbol: stock.symbol,\r\n            trade_date: new Date(),\r\n            shares: 0,\r\n            cost_per_share: 0,\r\n            notes: ''\r\n        }\r\n        dispatch(createPortfolioRecord({ id: id, record: record }))\r\n        history.push(`/portfolio/${id}/`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to={prev} className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col sm={12} md={10}>\r\n                                    <h4>{stock.name} ({ stock.symbol })</h4>\r\n                                </Col>\r\n                                {userInfo && \r\n                                    <Col sm={12} md={2}>\r\n                                        <ModalForm\r\n                                            show={addModalShow}\r\n                                            size=\"sm\"\r\n                                            title=\"Choose Portfolio to add the stocks\"\r\n                                            body={\r\n                                                (\r\n                                                    <>\r\n                                                        <div className=\"d-grid gap-2\">\r\n                                                            {portfolios.map(portfolio => (\r\n                                                                <div key={portfolio.id}>\r\n                                                                    <Button\r\n                                                                        variant=\"link\"\r\n                                                                        value={portfolio.id}\r\n                                                                        style={{ cursor: \"pointer\" }}\r\n                                                                        onClick={handelAddRecordInPortfolio}>\r\n                                                                        {portfolio.name}\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                        <Button className=\"mt-3 float-right\" onClick={() => setAddModalShow(false)} variant=\"secondary\">\r\n                                                            Close\r\n                                                        </Button>\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        />\r\n                                        <Button\r\n                                            variant=\"outline-info\" \r\n                                            size=\"sm\" \r\n                                            className=\"d-flex align-items-center\"\r\n                                            onClick={() => setAddModalShow(true)}>\r\n                                            <FaRegStar size=\"1rem\" className=\"mr-2\" />  Add To Portfolio\r\n                                        </Button>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h2>\r\n                                        {stock.price}\r\n                                        <small className={stock.change_amount > 0 ? \"text-success\" : \"text-danger\"}>\r\n                                            {stock.change_amount > 0 ? \"+\" + stock.change_amount : stock.change_amount}\r\n                                        </small>\r\n                                        <small className={stock.change_percent > 0 ? \"text-success\" : \"text-danger\"}>\r\n                                            ({stock.change_percent > 0 ? \"+\" + stock.change_percent + \"%\" : stock.change_percent + \"%\"})\r\n                                        </small>\r\n                                    </h2>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Previous Close</div>\r\n                                            <div>{stock.prev_close_value ? stock.prev_close_value : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Open</div>\r\n                                            <div>{stock.open_value ? stock.open_value : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Bid</div>\r\n                                            <div>{stock.bid_value ? stock.bid_value : \"N/A\"} X {stock.bid_quantity ? stock.bid_quantity : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Ask</div>\r\n                                            <div>{stock.ask_value ? stock.ask_value : \"N/A\"} X {stock.ask_quantity ? stock.ask_quantity : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Day's Range</div>\r\n                                            <div>{stock.days_low ? stock.days_low : \"N/A\"} - {stock.days_high ? stock.days_high : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Day's Range</div>\r\n                                            <div>{stock.fifty_two_week_low ? stock.fifty_two_week_low : \"N/A\"} - {stock.fifty_two_week_high ? stock.fifty_two_week_high : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Volume</div>\r\n                                            <div>{stock.volume ? stock.volume : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Avg. Volume</div>\r\n                                            <div>{stock.avg_volume ? stock.avg_volume : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Market Cap</div>\r\n                                            <div>{stock.market_cap ? stock.market_cap : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>PE Ratio</div>\r\n                                            <div>{stock.pe_ratio ? stock.pe_ratio : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>EPS Ratio</div>\r\n                                            <div>{stock.eps_ratio ? stock.eps_ratio : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Forward Dividend & Yield</div>\r\n                                            <div>{stock.forward_dividend_yield ? stock.forward_dividend_yield : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport StockList from '../components/StockList'\r\nimport { listStocksTopGainers } from '../actions/stocksAction'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TopGainersScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const stocksTopGainersList = useSelector(state => state.stocksTopGainersList)\r\n\r\n    let history = useHistory()\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listStocksTopGainers(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    {stocksTopGainersList.loading ? <Loader />\r\n                        : stocksTopGainersList.error ? <Message variant='danger'>{stocksTopGainersList.error}</Message>\r\n                            :\r\n                            <div className=\"py-5\">\r\n                                <StockList title={`Stocks: Gainers (Top ${stocksTopGainersList.stocks.total})`} showAddToPortfolioButton={true} stocks={stocksTopGainersList.stocks.stocks} />\r\n                                <Paginate page={stocksTopGainersList.stocks.page} pages={stocksTopGainersList.stocks.pages} link=\"top-gainers\" keywords={keyword} extra={2} />\r\n                            </div>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport StockList from '../components/StockList'\r\nimport { listStocksTopLosers } from '../actions/stocksAction'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TopLosersScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const stocksTopLosersList = useSelector(state => state.stocksTopLosersList)\r\n\r\n    let history = useHistory()\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listStocksTopLosers(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    {stocksTopLosersList.loading ? <Loader />\r\n                        : stocksTopLosersList.error ? <Message variant='danger'>{stocksTopLosersList.error}</Message>\r\n                            :\r\n                            <div className=\"py-5\">\r\n                                <StockList title={`Stocks: Losers (Top ${stocksTopLosersList.stocks.total})`} showAddToPortfolioButton={true} stocks={stocksTopLosersList.stocks.stocks} />\r\n                                <Paginate page={stocksTopLosersList.stocks.page} pages={stocksTopLosersList.stocks.pages} link=\"top-losers\" keywords={keyword} extra={2} />\r\n                            </div>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center py-5\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nexport default function LogInScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    if (loading) \r\n        return <Loader />\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    if (loading)\r\n        return <Loader />\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login?redirect=portfolio')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    if (loading)\r\n        return <Loader />\r\n    return (\r\n        <Row>\r\n            <Col className=\"py-5\">\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport ColoredCodecNumber from '../components/ColoredCodecNumber'\r\nimport Message from '../components/Message'\r\nimport ModalForm from '../components/ModalForm'\r\nimport { createPortfolio, getPortfolio, deletePortfolio, updatePortfolioDetails } from '../actions/portfolioAction'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function PortfolioScreen() {\r\n\r\n    let history = useHistory()\r\n    const path = history.location.search ? history.location.pathname + history.location.search : history.location.pathname\r\n\r\n    const [createModalShow, setCreateModalShow] = useState(false);\r\n    const [updateModalShow, setUpdateModalShow] = useState(false);\r\n    const [portfolioName, setPortfolioName] = useState('')\r\n    const [selectedPortfolio, setSelectedPortfolio] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n    const portfolioList = useSelector(state => state.portfolioList)\r\n    const { error, loading, portfolios } = portfolioList\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        dispatch(getPortfolio())\r\n    }, [])\r\n\r\n    const handelCreatePortfolioSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createPortfolio({ 'name': portfolioName}))\r\n        setPortfolioName('')\r\n        setCreateModalShow(false)\r\n    }\r\n\r\n    const handelDeletePortfolio = (e) => {\r\n        e.preventDefault()\r\n        const portfolio_id = e.target.value\r\n        dispatch(deletePortfolio(portfolio_id))\r\n    }\r\n\r\n    const handelUpdatePortfolioSubmit  = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updatePortfolioDetails({ id: selectedPortfolio, portfolio: { 'name': portfolioName }}))\r\n        setPortfolioName('')\r\n        setUpdateModalShow(false)\r\n    }\r\n\r\n    if(loading) \r\n        return <Loader />\r\n    return (\r\n        <>  \r\n            {error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                (\r\n                    <>\r\n                        <ModalForm\r\n                            show={createModalShow}\r\n                            title=\"Create New Portfolio\"\r\n                            body={\r\n                                (\r\n                                    <Form onSubmit={handelCreatePortfolioSubmit}>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Portfolio Name</Form.Label>\r\n                                            <Form.Control \r\n                                                type=\"name\" \r\n                                                placeholder=\"Enter Portfolio Name\" \r\n                                                value={portfolioName}\r\n                                                onChange={(e) => setPortfolioName(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"pt-3 text-right border-top\" controlId=\"formBasicEmail\">\r\n                                            <Button onClick={() => setCreateModalShow(false)} variant=\"secondary\">\r\n                                                Close\r\n                                            </Button>\r\n                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                )\r\n                            }\r\n                        />\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-between\">\r\n                            <Button \r\n                                onClick={() => setCreateModalShow(true)} \r\n                                variant=\"info\" \r\n                                size=\"sm\" \r\n                                className=\"my-3 d-flex align-items-center text-center\">\r\n                                Create New Portfolio\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                        {portfolios.length > 0 &&\r\n                            <Row>\r\n                                <Col>\r\n                                    <Table striped responsive hover size=\"sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th><small>Name</small></th>\r\n                                                <th><small>Symbols</small></th>\r\n                                                <th><small>Market Value</small></th>\r\n                                                <th><small>Day Change</small></th>\r\n                                                <th><small>Day Change%</small></th>\r\n                                                <th><small>Total Change</small></th>\r\n                                                <th><small>Total Change %</small></th>\r\n                                                <th></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {portfolios?.map(portfolio => (\r\n                                                <tr key={portfolio.id}>\r\n                                                    <td>\r\n                                                        <Link to={`/portfolio/${portfolio.id}/?prev=${path}`}>{portfolio.name}</Link>\r\n                                                        <div><small>Last Updated at: {portfolio.updatedAt}</small></div>\r\n                                                    </td>\r\n                                                    <td>{portfolio.symbols}</td>\r\n                                                    <td>{portfolio.market_value}</td>\r\n                                                    <td><ColoredCodecNumber value={portfolio.day_change_value} /></td>\r\n                                                    <td><ColoredCodecNumber value={portfolio.day_change_percent} prefix=\"%\" /></td>\r\n                                                    <td><ColoredCodecNumber value={portfolio.total_change} /></td>\r\n                                                    <td><ColoredCodecNumber value={portfolio.total_change_percent} prefix=\"%\" /></td>\r\n                                                    <td>\r\n                                                        <ModalForm\r\n                                                            show={updateModalShow}\r\n                                                            title=\"Update Portfolio\"\r\n                                                            body={\r\n                                                                (\r\n                                                                    <Form onSubmit={handelUpdatePortfolioSubmit}>\r\n                                                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                                                            <Form.Label>Portfolio Name</Form.Label>\r\n                                                                            <Form.Control\r\n                                                                                type=\"name\"\r\n                                                                                placeholder=\"Enter Portfolio Name\"\r\n                                                                                value={portfolioName}\r\n                                                                                onChange={(e) => setPortfolioName(e.target.value)}\r\n                                                                            />\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group className=\"pt-3 text-right border-top\" controlId=\"formBasicEmail\">\r\n                                                                            <Button onClick={() => { setUpdateModalShow(false);}} variant=\"secondary\">\r\n                                                                                Close\r\n                                                                            </Button>\r\n                                                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                                                Submit\r\n                                                                            </Button>\r\n                                                                        </Form.Group>\r\n                                                                    </Form>\r\n                                                                )\r\n                                                            }\r\n                                                        />\r\n                                                        <Button\r\n                                                            variant=\"info\"\r\n                                                            value={portfolio.id}\r\n                                                            onClick={() => { \r\n                                                                setSelectedPortfolio(portfolio.id); \r\n                                                                setPortfolioName(portfolio.name); \r\n                                                                setUpdateModalShow(true); \r\n                                                            }}\r\n                                                            size=\"sm\"\r\n                                                            className=\"my-3 mr-3\">\r\n                                                            Update\r\n                                                        </Button>\r\n                                                        <Button\r\n                                                            variant=\"info\"\r\n                                                            value={portfolio.id}\r\n                                                            onClick={handelDeletePortfolio}\r\n                                                            size=\"sm\"\r\n                                                            className=\"my-3\">\r\n                                                            Delete\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        }\r\n                </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Form, Table, ListGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker from \"react-datepicker\"\r\nimport Loader from '../components/Loader'\r\nimport ColoredCodecNumber from '../components/ColoredCodecNumber'\r\nimport Message from '../components/Message'\r\nimport ModalForm from '../components/ModalForm'\r\nimport { getPortfolioDetails, createPortfolioRecord, updatePortfolioRecord, deletePortfolioRecord } from '../actions/portfolioAction'\r\nimport { listStocks } from '../actions/stocksAction'\r\n\r\nexport default function PortfolioDetailsScreen({ location, history, match }) {\r\n\r\n    const [createModalShow, setCreateModalShow] = useState(false)\r\n    const [updateModalShow, setUpdateModalShow] = useState(false)\r\n    \r\n    const symbolInputRef = useRef()\r\n    const symbolSelectRef = useRef()\r\n    const [searchStocks, setSearchStocks] = useState([])\r\n\r\n    const [selectedRecord, setSelectedRecord] = useState(\"\")\r\n\r\n    const [symbol, setSymbol] = useState('')\r\n    const [tradeDate, setTradeDate] = useState(new Date())\r\n    const today = new Date()\r\n    const [shares, setShares] = useState(0)\r\n    const [costPerShares, setCostPerShares] = useState(0)\r\n    const [notes, setNotes] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const portfolioDetails = useSelector(state => state.portfolioDetails)\r\n    const { error, loading, portfolio } = portfolioDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const stocksList = useSelector(state => state.stocksList)\r\n\r\n    const prev = location.search ? location.search.split('?prev=')[1] : '/'\r\n    const path = history.location.search ? history.location.pathname + history.location.search : history.location.pathname\r\n\r\n    useEffect(() => {\r\n        if (!userInfo)\r\n            history.push('/login')\r\n\r\n        dispatch(getPortfolioDetails(match.params.id))\r\n    }, [userInfo, match])\r\n\r\n    const handelCreateRecordSubmit = (e) => {\r\n        e.preventDefault()\r\n        let record = {\r\n            symbol: symbol,\r\n            trade_date: tradeDate,\r\n            shares: shares,\r\n            cost_per_share: costPerShares,\r\n            notes: notes\r\n        }\r\n        dispatch(createPortfolioRecord({id: match.params.id, record: record}))\r\n        setCreateModalShow(false)\r\n        setSymbol('')\r\n        setTradeDate(today)\r\n        setShares('')\r\n        setCostPerShares('')\r\n        setNotes('')\r\n    }\r\n\r\n    const handelUpdateRecordSubmit = (e) => {\r\n        e.preventDefault()\r\n        let record = {\r\n            symbol: symbol,\r\n            trade_date: tradeDate,\r\n            shares: shares,\r\n            cost_per_share: costPerShares,\r\n            notes: notes\r\n        }\r\n        dispatch(updatePortfolioRecord({ id: selectedRecord, record: record }))\r\n        setUpdateModalShow(false)\r\n        setSymbol('')\r\n        setTradeDate(today)\r\n        setShares('')\r\n        setCostPerShares('')\r\n        setNotes('')\r\n    }\r\n\r\n    const handelDeleteRecord = (e) => {\r\n        e.preventDefault()\r\n        dispatch(deletePortfolioRecord(e.target.value))\r\n    }\r\n\r\n    const handelSearchSymbols = (e) => {\r\n        symbolSelectRef.current.style.display = \"flex\"\r\n        dispatch(listStocks(`?keyword=${e.target.value}`))\r\n        setSearchStocks(stocksList.stocks.slice(0, 5))\r\n    }\r\n\r\n    if (loading)\r\n        return <Loader />\r\n    return (\r\n        <>\r\n            <Link to={prev} className='btn btn-light my-3'>Go Back</Link>\r\n            {error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                (\r\n                    <>\r\n                        <ModalForm\r\n                            show={createModalShow}\r\n                            title=\"Create New Record\"\r\n                            body={\r\n                                (\r\n                                    <Form onSubmit={handelCreateRecordSubmit}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Stock Symbol</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Search Stock Symbol / Name\"\r\n                                                ref={symbolInputRef}\r\n                                                onChange={handelSearchSymbols}\r\n                                            />\r\n                                            <ListGroup ref={symbolSelectRef} style={{ position: \"absolute\", width: \"calc(100% - 32px)\", boxShadow: \"0px 1px 5px 0px #00000044\", zIndex: 1 }}>\r\n                                                {searchStocks.map(stock => (\r\n                                                    <ListGroup.Item \r\n                                                        key={stock.symbol}\r\n                                                        value={stock.symbol}\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        onClick={(e) => {\r\n                                                            symbolInputRef.current.value = stock.symbol;\r\n                                                            setSymbol(stock.symbol)\r\n                                                            symbolSelectRef.current.style.display = \"none\"\r\n                                                        }}>\r\n                                                        {stock.name} ({stock.symbol})\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Trading Date</Form.Label>\r\n                                            <DatePicker\r\n                                                selected={tradeDate}\r\n                                                onChange={(e) => {\r\n                                                    setTradeDate(e);\r\n                                                }}\r\n                                                className=\"form-control\"\r\n                                                maxDate={today}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Shares</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"number\"\r\n                                                step=\"any\"\r\n                                                placeholder=\"Shares\"\r\n                                                value={shares}\r\n                                                onChange={(e) => setShares(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Cost Per Share</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"number\"\r\n                                                step=\"any\"\r\n                                                placeholder=\"Cost Per Share\"\r\n                                                value={costPerShares}\r\n                                                onChange={(e) => setCostPerShares(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Notes</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Notes\"\r\n                                                value={notes}\r\n                                                onChange={(e) => setNotes(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"pt-3 text-right border-top\">\r\n                                            <Button onClick={() => setCreateModalShow(false)} variant=\"secondary\">\r\n                                                Close\r\n                                            </Button>\r\n                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                )\r\n                            }\r\n                        />\r\n                        <Row>\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                                <Button onClick={() => setCreateModalShow(true)} variant=\"info\" size=\"sm\" className=\"my-3 d-flex align-items-center text-center\">\r\n                                    Create New Record\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Table striped responsive hover size=\"sm\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th><small>Symbols</small></th>\r\n                                            <th><small>Change</small></th>\r\n                                            <th><small>Shares</small></th>\r\n                                            <th><small>Cost / Share</small></th>\r\n                                            <th><small>Market Value</small></th>\r\n                                            <th><small>Day Gain</small></th>\r\n                                            <th><small>Total Gain</small></th>\r\n                                            <th><small>Notes</small></th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {portfolio.records?.map(record => (\r\n                                            <tr key={record.id}>\r\n                                                <td>\r\n                                                    <Link to={`/stock/${record.symbol}/?prev=${path}`}>{record.symbol}</Link>\r\n                                                    <div><small>Price: {record.symbol_price}</small></div>\r\n                                                    <div><small>Traded on: {record.trade_date}</small></div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <ColoredCodecNumber value={record.change_value} />\r\n                                                    <div><small><ColoredCodecNumber value={record.change_percent} prefix=\"%\" /></small></div>\r\n                                                </td>\r\n                                                <td>{record.shares}</td>\r\n                                                <td>{record.cost_per_share}</td>\r\n                                                <td>{record.market_value}</td>\r\n                                                <td>\r\n                                                    <ColoredCodecNumber value={record.gain_value} />\r\n                                                    <div><small><ColoredCodecNumber value={record.gain_percent} prefix=\"%\" /></small></div>\r\n                                                </td>\r\n                                                <td><ColoredCodecNumber value={record.total_gain} /></td>\r\n                                                <td>{record.notes}</td>\r\n                                                <td>\r\n                                                    <ModalForm\r\n                                                        show={updateModalShow}\r\n                                                        onClose={() => setUpdateModalShow(false)}\r\n                                                        title=\"Update Record\"\r\n                                                        body={\r\n                                                            (\r\n                                                                <Form onSubmit={handelUpdateRecordSubmit}>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Stock Symbol</Form.Label>\r\n                                                                        <Form.Control\r\n                                                                            type=\"text\"\r\n                                                                            value={symbol}\r\n                                                                            placeholder=\"Search Stock Symbol / Name\"\r\n                                                                            ref={symbolInputRef}\r\n                                                                            onChange={(e) => e.preventDefault()}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Trading Date</Form.Label>\r\n                                                                        <DatePicker\r\n                                                                            selected={tradeDate}\r\n                                                                            onChange={(e) => {\r\n                                                                                setTradeDate(e);\r\n                                                                            }}\r\n                                                                            className=\"form-control\"\r\n                                                                            maxDate={today}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Shares</Form.Label>\r\n                                                                        <Form.Control\r\n                                                                            type=\"number\"\r\n                                                                            step=\"any\"\r\n                                                                            placeholder=\"Shares\"\r\n                                                                            value={shares}\r\n                                                                            onChange={(e) => setShares(e.target.value)}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Cost Per Share</Form.Label>\r\n                                                                        <Form.Control\r\n                                                                            type=\"number\"\r\n                                                                            step=\"any\"\r\n                                                                            placeholder=\"Cost Per Share\"\r\n                                                                            value={costPerShares}\r\n                                                                            onChange={(e) => setCostPerShares(e.target.value)}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Notes</Form.Label>\r\n                                                                        <Form.Control\r\n                                                                            type=\"text\"\r\n                                                                            placeholder=\"Notes\"\r\n                                                                            value={notes}\r\n                                                                            onChange={(e) => setNotes(e.target.value)}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"pt-3 text-right border-top\">\r\n                                                                        <Button onClick={() => {\r\n                                                                            setSelectedRecord(\"\")\r\n                                                                            setUpdateModalShow(false)\r\n                                                                        }} variant=\"secondary\">\r\n                                                                            Close\r\n                                                                        </Button>\r\n                                                                        <Button variant=\"primary\" type=\"submit\">\r\n                                                                            Submit\r\n                                                                        </Button>\r\n                                                                    </Form.Group>\r\n                                                                </Form>\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                    <Button\r\n                                                        variant=\"info\"\r\n                                                        value={record.id}\r\n                                                        onClick={() => {\r\n                                                            setSelectedRecord(record.id)\r\n                                                            setSymbol(record.symbol)\r\n                                                            setTradeDate(new Date(record.trade_date))\r\n                                                            setShares(record.shares)\r\n                                                            setCostPerShares(record.cost_per_share)\r\n                                                            setNotes(record.notes)\r\n                                                            setUpdateModalShow(true)\r\n                                                        }}\r\n                                                        size=\"sm\"\r\n                                                        className=\"my-3 mr-3\">\r\n                                                        Update\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant=\"info\"\r\n                                                        value={record.id}\r\n                                                        onClick={handelDeleteRecord}\r\n                                                        size=\"sm\"\r\n                                                        className=\"my-3\">\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport HomeScreen from './screens/HomeScreen'\nimport SearchScreen from './screens/SearchScreen'\nimport StockDetailsScreen from './screens/StockDetailsScreen'\nimport TopGainersScreen from './screens/TopGainersScreen'\nimport TopLosersScreen from './screens/TopLosersScreen'\nimport LogInScreen from './screens/LogInScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport PortfolioScreen from './screens/PortfolioScreen'\nimport PortfolioDetailsScreen from './screens/PortfolioDetailsScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <div className=\"App\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/search/' component={SearchScreen} exact />\n          <Route path='/stock/:id' component={StockDetailsScreen} />\n          <Route path='/top-gainers' component={TopGainersScreen} />\n          <Route path='/top-losers' component={TopLosersScreen} />\n          <Route path='/login' component={LogInScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/portfolios' component={PortfolioScreen} />\n          <Route path='/portfolio/:id' component={PortfolioDetailsScreen} />\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App';\nimport './bootstrap.min.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}