{"version":3,"sources":["constants/stocksConstants.js","constants/userConstants.js","constants/portfolioConstants.js","store.js","reducers/stocksReducers.js","reducers/userReducers.js","reducers/portfolioReducers.js","components/SearchBox.js","components/Header.js","actions/userActions.js","components/Loader.js","components/Message.js","components/ColoredCodecNumber.js","components/StockList.js","actions/stocksAction.js","screens/HomeScreen.js","components/Paginate.js","screens/SearchScreen.js","screens/StockDetailsScreen.js","screens/TopGainersScreen.js","screens/TopLosersScreen.js","components/FormContainer.js","screens/LogInScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","components/ModalForm.js","screens/PortfolioScreen.js","actions/portfolioAction.js","screens/PortfolioDetailsScreen.js","App.js","reportWebVitals.js","index.js"],"names":["STOCKS_LIST_REQUEST","STOCKS_LIST_SUCCESS","STOCKS_LIST_FAIL","STOCKS_DETAILS_REQUEST","STOCKS_DETAILS_SUCCESS","STOCKS_DETAILS_FAIL","STOCKS_TOP_GAINER_REQUEST","STOCKS_TOP_GAINER_SUCCESS","STOCKS_TOP_GAINER_FAIL","STOCKS_TOP_LOSER_REQUEST","STOCKS_TOP_LOSER_SUCCESS","STOCKS_TOP_LOSER_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","PORTFOLIO_CREATE_REQUEST","PORTFOLIO_CREATE_SUCCESS","PORTFOLIO_CREATE_FAIL","PORTFOLIO_REQUEST","PORTFOLIO_SUCCESS","PORTFOLIO_FAIL","PORTFOLIO_DELETE_REQUEST","PORTFOLIO_DELETE_SUCCESS","PORTFOLIO_DELETE_FAIL","PORTFOLIO_DETAILS_REQUEST","PORTFOLIO_DETAILS_SUCCESS","PORTFOLIO_DETAILS_FAIL","PORTFOLIO_RECORD_CREATE_REQUEST","PORTFOLIO_RECORD_CREATE_SUCCESS","PORTFOLIO_RECORD_CREATE_FAIL","PORTFOLIO_RECORD_DELETE_REQUEST","PORTFOLIO_RECORD_DELETE_SUCCESS","PORTFOLIO_RECORD_DELETE_FAIL","PORTFOLIO_DETAILS_UPDATE_REQUEST","PORTFOLIO_DETAILS_UPDATE_SUCCESS","PORTFOLIO_DETAILS_UPDATE_FAIL","PORTFOLIO_RECORD_UPDATE_REQUEST","PORTFOLIO_RECORD_UPDATE_SUCCESS","PORTFOLIO_RECORD_UPDATE_FAIL","reducer","combineReducers","stocksList","state","stocks","action","type","loading","payload","page","pages","error","stocksTopGainersList","stockDetailsList","stock","stocksTopLosersList","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","portfolioList","portfolios","index","findIndex","x","id","name","updatedAt","filter","parseInt","portfolioDetails","portfolio","records","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","onChange","target","value","className","Button","variant","Header","useSelector","dispatch","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Loader","Spinner","animation","role","style","margin","height","width","display","Message","children","Alert","ColoredCodecNumber","prefix","StockList","seeMoreLink","showAddToPortfolioButton","prev","search","selectedStocks","setSelectedStocks","addToPortfolioButton","useRef","useEffect","length","current","disabled","handleStockCheckboxClick","stockSymbol","prevSelectedStock","find","ref","size","Table","striped","responsive","hover","map","Check","symbol","label","price","change_amount","listStocks","a","axios","get","data","response","detail","message","listStocksTopGainers","listStocksTopLosers","HomeScreen","Row","Col","sm","md","ink","slice","Paginate","link","keywords","extra","split","page_lower_index","Math","max","page_upper_index","min","Pagination","Array","fill","i","active","SearchScreen","searchKey","StockDetailsScreen","match","params","change_percent","ListGroup","prev_close_value","open_value","bid_value","bid_quantity","ask_value","ask_quantity","days_low","days_high","fifty_two_week_low","fifty_two_week_high","volume","avg_volume","market_cap","pe_ratio","eps_ratio","forward_dividend_yield","TopGainersScreen","total","TopLosersScreen","FormContainer","xs","LogInScreen","email","setEmail","password","setPassword","redirect","config","headers","post","setItem","stringify","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","_id","getState","Authorization","token","put","updateUserProfile","ModalForm","show","onClose","body","Modal","centered","Title","Body","PortfolioScreen","path","createModalShow","setCreateModalShow","updateModalShow","setUpdateModalShow","portfolioName","setPortfolioName","selectedPortfolio","setSelectedPortfolio","handelDeletePortfolio","portfolio_id","delete","handelUpdatePortfolioSubmit","updatePortfolioDetails","symbols","market_value","day_change_value","day_change_percent","total_change","total_change_percent","PortfolioDetailsScreen","symbolInputRef","symbolSelectRef","searchStocks","setSearchStocks","selectedRecord","setSelectedRecord","setSymbol","Date","tradeDate","setTradeDate","today","shares","setShares","costPerShares","setCostPerShares","notes","setNotes","handelUpdateRecordSubmit","record","trade_date","cost_per_share","console","log","updatePortfolioRecord","handelDeleteRecord","createPortfolioRecord","position","boxShadow","zIndex","cursor","selected","maxDate","step","symbol_price","change_value","gain_value","gain_percent","total_gain","App","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fd98cc0.chunk.js","sourcesContent":["export const STOCKS_LIST_REQUEST = 'STOCKS_LIST_REQUEST'\r\nexport const STOCKS_LIST_SUCCESS = 'STOCKS_LIST_SUCCESS'\r\nexport const STOCKS_LIST_FAIL = 'STOCKS_LIST_FAIL'\r\n\r\nexport const STOCKS_DETAILS_REQUEST = 'STOCKS_DETAILS_REQUEST'\r\nexport const STOCKS_DETAILS_SUCCESS = 'STOCKS_DETAILS_SUCCESS'\r\nexport const STOCKS_DETAILS_FAIL = 'STOCKS_DETAILS_FAIL'\r\n\r\nexport const STOCKS_TOP_GAINER_REQUEST = 'STOCKS_TOP_GAINER_REQUEST'\r\nexport const STOCKS_TOP_GAINER_SUCCESS = 'STOCKS_TOP_GAINER_SUCCESS'\r\nexport const STOCKS_TOP_GAINER_FAIL = 'STOCKS_TOP_GAINER_FAIL'\r\n\r\nexport const STOCKS_TOP_LOSER_REQUEST = 'STOCKS_TOP_LOSER_REQUEST'\r\nexport const STOCKS_TOP_LOSER_SUCCESS = 'STOCKS_TOP_LOSER_SUCCESS'\r\nexport const STOCKS_TOP_LOSER_FAIL = 'STOCKS_TOP_LOSER_FAIL'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const PORTFOLIO_CREATE_REQUEST = 'PORTFOLIO_CREATE_REQUEST'\r\nexport const PORTFOLIO_CREATE_SUCCESS = 'PORTFOLIO_CREATE_SUCCESS'\r\nexport const PORTFOLIO_CREATE_FAIL = 'PORTFOLIO_CREATE_FAIL'\r\n\r\nexport const PORTFOLIO_CREATE_RESET = 'PORTFOLIO_CREATE_RESET'\r\n\r\nexport const PORTFOLIO_REQUEST = 'PORTFOLIO_REQUEST'\r\nexport const PORTFOLIO_SUCCESS = 'PORTFOLIO_SUCCESS'\r\nexport const PORTFOLIO_FAIL = 'PORTFOLIO_FAIL'\r\n\r\nexport const PORTFOLIO_DELETE_REQUEST = 'PORTFOLIO_DELETE_REQUEST'\r\nexport const PORTFOLIO_DELETE_SUCCESS = 'PORTFOLIO_DELETE_SUCCESS'\r\nexport const PORTFOLIO_DELETE_FAIL = 'PORTFOLIO_DELETE_FAIL'\r\n\r\nexport const PORTFOLIO_DETAILS_REQUEST = 'PORTFOLIO_DETAILS_REQUEST'\r\nexport const PORTFOLIO_DETAILS_SUCCESS = 'PORTFOLIO_DETAILS_SUCCESS'\r\nexport const PORTFOLIO_DETAILS_FAIL = 'PORTFOLIO_DETAILS_FAIL'\r\n\r\nexport const PORTFOLIO_RECORD_CREATE_REQUEST = 'PORTFOLIO_RECORD_CREATE_REQUEST'\r\nexport const PORTFOLIO_RECORD_CREATE_SUCCESS = 'PORTFOLIO_RECORD_CREATE_SUCCESS'\r\nexport const PORTFOLIO_RECORD_CREATE_FAIL = 'PORTFOLIO_RECORD_CREATE_FAIL'\r\n\r\nexport const PORTFOLIO_RECORD_DELETE_REQUEST = 'PORTFOLIO_RECORD_DELETE_REQUEST'\r\nexport const PORTFOLIO_RECORD_DELETE_SUCCESS = 'PORTFOLIO_RECORD_DELETE_SUCCESS'\r\nexport const PORTFOLIO_RECORD_DELETE_FAIL = 'PORTFOLIO_RECORD_DELETE_FAIL'\r\n\r\nexport const PORTFOLIO_DETAILS_UPDATE_REQUEST = 'PORTFOLIO_DETAILS_UPDATE_REQUEST'\r\nexport const PORTFOLIO_DETAILS_UPDATE_SUCCESS = 'PORTFOLIO_DETAILS_UPDATE_SUCCESS'\r\nexport const PORTFOLIO_DETAILS_UPDATE_FAIL = 'PORTFOLIO_DETAILS_UPDATE_FAIL'\r\n\r\nexport const PORTFOLIO_RECORD_UPDATE_REQUEST = 'PORTFOLIO_RECORD_UPDATE_REQUEST'\r\nexport const PORTFOLIO_RECORD_UPDATE_SUCCESS = 'PORTFOLIO_RECORD_UPDATE_SUCCESS'\r\nexport const PORTFOLIO_RECORD_UPDATE_FAIL = 'PORTFOLIO_RECORD_UPDATE_FAIL'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { \r\n    stocksListReducer, \r\n    stocksTopGainersReducer, \r\n    stockDetailsReducer, \r\n    stocksTopLosersReducer \r\n} from './reducers/stocksReducers'\r\n\r\nimport { \r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer \r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    portfolioReducer,\r\n    portfolioDetailsReducer\r\n} from './reducers/portfolioReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    stocksList: stocksListReducer,\r\n    stocksTopGainersList: stocksTopGainersReducer,\r\n    stockDetailsList: stockDetailsReducer,\r\n    stocksTopLosersList: stocksTopLosersReducer,\r\n    \r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n\r\n    portfolioList: portfolioReducer,\r\n    portfolioDetails: portfolioDetailsReducer\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    STOCKS_LIST_REQUEST,\r\n    STOCKS_LIST_SUCCESS,\r\n    STOCKS_LIST_FAIL,\r\n\r\n    STOCKS_DETAILS_REQUEST,\r\n    STOCKS_DETAILS_SUCCESS,\r\n    STOCKS_DETAILS_FAIL,\r\n\r\n    STOCKS_TOP_GAINER_REQUEST,\r\n    STOCKS_TOP_GAINER_SUCCESS,\r\n    STOCKS_TOP_GAINER_FAIL,\r\n\r\n    STOCKS_TOP_LOSER_REQUEST,\r\n    STOCKS_TOP_LOSER_SUCCESS,\r\n    STOCKS_TOP_LOSER_FAIL,\r\n} from '../constants/stocksConstants'\r\n\r\nexport const stocksListReducer = (state = { stocks: [] }, action) => {\r\n    switch (action.type) {\r\n        case STOCKS_LIST_REQUEST:\r\n            return { loading: true, stocks: [] }\r\n\r\n        case STOCKS_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                stocks: action.payload.stocks,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case STOCKS_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const stockDetailsReducer = (state = { stock: {} }, action) => {\r\n    switch (action.type) {\r\n        case STOCKS_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case STOCKS_DETAILS_SUCCESS:\r\n            return { loading: false, stock: action.payload }\r\n\r\n        case STOCKS_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const stocksTopGainersReducer = (state = { stocks: [] }, action) => {\r\n    switch (action.type) {\r\n        case STOCKS_TOP_GAINER_REQUEST:\r\n            return { loading: true, stocks: [] }\r\n\r\n        case STOCKS_TOP_GAINER_SUCCESS:\r\n            return { loading: false, stocks: action.payload, }\r\n\r\n        case STOCKS_TOP_GAINER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const stocksTopLosersReducer = (state = { stocks: [] }, action) => {\r\n    switch (action.type) {\r\n        case STOCKS_TOP_LOSER_REQUEST:\r\n            return { loading: true, stocks: [] }\r\n\r\n        case STOCKS_TOP_LOSER_SUCCESS:\r\n            return { loading: false, stocks: action.payload, }\r\n\r\n        case STOCKS_TOP_LOSER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\nPORTFOLIO_CREATE_REQUEST,\r\nPORTFOLIO_CREATE_SUCCESS,\r\nPORTFOLIO_CREATE_FAIL,\r\n\r\nPORTFOLIO_REQUEST,\r\nPORTFOLIO_SUCCESS,\r\nPORTFOLIO_FAIL,\r\n\r\nPORTFOLIO_DELETE_REQUEST,\r\nPORTFOLIO_DELETE_SUCCESS,\r\nPORTFOLIO_DELETE_FAIL,\r\n\r\nPORTFOLIO_DETAILS_REQUEST,\r\nPORTFOLIO_DETAILS_SUCCESS,\r\nPORTFOLIO_DETAILS_FAIL,\r\n\r\nPORTFOLIO_RECORD_CREATE_REQUEST,\r\nPORTFOLIO_RECORD_CREATE_SUCCESS,\r\nPORTFOLIO_RECORD_CREATE_FAIL,\r\n\r\nPORTFOLIO_RECORD_DELETE_REQUEST,\r\nPORTFOLIO_RECORD_DELETE_SUCCESS,\r\nPORTFOLIO_RECORD_DELETE_FAIL,\r\n\r\nPORTFOLIO_DETAILS_UPDATE_REQUEST,\r\nPORTFOLIO_DETAILS_UPDATE_SUCCESS,\r\nPORTFOLIO_DETAILS_UPDATE_FAIL,\r\n\r\nPORTFOLIO_RECORD_UPDATE_REQUEST,\r\nPORTFOLIO_RECORD_UPDATE_SUCCESS,\r\nPORTFOLIO_RECORD_UPDATE_FAIL\r\n\r\n} from '../constants/portfolioConstants'\r\n\r\n\r\nexport const portfolioReducer = (state = { loading: true, portfolios: [] }, action) => {\r\n    switch (action.type) {\r\n        case PORTFOLIO_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                portfolios: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                portfolios: [...state.portfolios, action.payload]\r\n            }\r\n\r\n        case PORTFOLIO_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_DETAILS_UPDATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case PORTFOLIO_DETAILS_UPDATE_SUCCESS:\r\n            const index = state.portfolios.findIndex(x => x.id === action.payload.id)\r\n            state.portfolios[index].name = action.payload.name\r\n            state.portfolios[index].updatedAt = action.payload.updatedAt\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolios: state.portfolios,\r\n                success: true\r\n            }\r\n\r\n        case PORTFOLIO_DETAILS_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_DELETE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case PORTFOLIO_DELETE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolios: state.portfolios.filter(x => x.id !== parseInt(action.payload)),\r\n                success: true\r\n            }\r\n\r\n        case PORTFOLIO_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const portfolioDetailsReducer = (state = { loading: true, portfolio: { records: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PORTFOLIO_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                portfolio: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_CREATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_CREATE_SUCCESS:\r\n            state.portfolio.records = [...state.portfolio.records, action.payload]\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolio: state.portfolio\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_UPDATE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_UPDATE_SUCCESS:\r\n            const index = state.portfolio.records.findIndex(x => x.id === action.payload.id)\r\n            state.portfolio.records[index] = action.payload\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolio: state.portfolio,\r\n                success: true\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_UPDATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        case PORTFOLIO_RECORD_DELETE_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_DELETE_SUCCESS:\r\n            state.portfolio.records = state.portfolio.records.filter(x => x.id !== parseInt(action.payload))\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                portfolio: state.portfolio\r\n            }\r\n\r\n        case PORTFOLIO_RECORD_DELETE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/search/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button\r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nexport default function Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>SE Helper</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n\r\n\r\n                            {userInfo ? (\r\n                                <>\r\n                                    <LinkContainer to='/portfolios'>\r\n                                        <Nav.Link >My Portfolio</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown title={userInfo.name} id='username'>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                    </NavDropdown>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link>Login</Nav.Link>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/register'>\r\n                                    <Nav.Link>Register</Nav.Link>\r\n                                </LinkContainer>\r\n                                </>\r\n                            )}\r\n\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='admin-menu'>\r\n                                    <LinkContainer to='/admin/user-list'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/portfolio-list'>\r\n                                        <NavDropdown.Item>Portfolio List</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/wishlist-list'>\r\n                                        <NavDropdown.Item>Wishlist List</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL\r\n} from '../constants/userConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='grow'\r\n            role='status'\r\n            variant=\"success\"\r\n            style={{\r\n                margin: '100px auto',\r\n                height: '100px',\r\n                width: '100px',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\n\r\nexport default function ColoredCodecNumber({ value, prefix }) {\r\n    return (\r\n        <p className={value > 0 ? \"text-success\" : value < 0 ? \"text-danger\" : \"\"}>\r\n            {value > 0 ? \"+\" + value : value}{prefix}\r\n        </p>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Button, Form, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaRegStar } from \"react-icons/fa\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport ColoredCodecNumber from '../components/ColoredCodecNumber'\r\n\r\n\r\nexport default function StockList({ title, seeMoreLink, showAddToPortfolioButton, stocks }) {\r\n\r\n    let history = useHistory()\r\n    const prev = history.location.search ? history.location.pathname + history.location.search : history.location.pathname\r\n\r\n    const [selectedStocks, setSelectedStocks] = useState([])\r\n    const addToPortfolioButton = useRef()\r\n\r\n    useEffect(() => {\r\n        if (showAddToPortfolioButton && selectedStocks.length === 0) {\r\n            addToPortfolioButton.current.disabled = true\r\n        }\r\n        if (showAddToPortfolioButton && selectedStocks.length > 0) {\r\n            addToPortfolioButton.current.disabled = false\r\n        }\r\n    }, [showAddToPortfolioButton, selectedStocks])\r\n\r\n    const handleStockCheckboxClick = (e) => {\r\n        let stockSymbol = e.target.value\r\n        setSelectedStocks(prevSelectedStock => {\r\n            if (prevSelectedStock.find(x => x === stockSymbol)) {\r\n                return prevSelectedStock.filter(x => x !== stockSymbol)\r\n            } else {\r\n                return [...prevSelectedStock, stockSymbol]\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-between align-items-baseline\">\r\n                <h4>{title}</h4>\r\n                {showAddToPortfolioButton ?\r\n                    <Button ref={addToPortfolioButton} disabled variant=\"outline-info\" size=\"sm\" className=\"d-flex align-items-center\">\r\n                        <FaRegStar size=\"1rem\" className=\"mr-2\" />  Add To Portfolio\r\n                    </Button>\r\n                    : \"\"\r\n                }\r\n                {seeMoreLink && <Link to={seeMoreLink}>See More...</Link>}\r\n            </div>\r\n            <Table striped responsive hover size=\"sm\">\r\n                <thead>\r\n                    <tr>\r\n                        <th><small>Symbol</small></th>\r\n                        <th><small>Last Price</small></th>\r\n                        <th><small>Change</small></th>\r\n                        <th><small>% Change</small></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {stocks?.map(stock => (\r\n                        <tr key={stock.symbol}>\r\n                            <td>\r\n                                {showAddToPortfolioButton ? <Form.Check\r\n                                        type=\"checkbox\"\r\n                                        id=\"default-checkbox\"\r\n                                        onChange={handleStockCheckboxClick}\r\n                                        value={stock.symbol}\r\n                                        label={<Link to={`/stock/${stock.symbol}/?prev=${prev}`}>{stock.symbol}</Link>}\r\n                                    />\r\n                                    :\r\n                                    <Link to={`/stock/${stock.symbol}/?prev=${prev}`}>{stock.symbol}</Link>\r\n                                }\r\n                                <div><small>{stock.name}</small></div>\r\n                            </td>\r\n                            <td>{stock.price}</td>\r\n                            <td>\r\n                                <ColoredCodecNumber value={stock.change_amount} />\r\n                            </td>\r\n                            <td>\r\n                                <ColoredCodecNumber value={stock.change_amount} prefix=\"%\" />\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    STOCKS_LIST_REQUEST,\r\n    STOCKS_LIST_SUCCESS,\r\n    STOCKS_LIST_FAIL,\r\n\r\n    STOCKS_DETAILS_REQUEST,\r\n    STOCKS_DETAILS_SUCCESS,\r\n    STOCKS_DETAILS_FAIL,\r\n    \r\n    STOCKS_TOP_GAINER_REQUEST,\r\n    STOCKS_TOP_GAINER_SUCCESS,\r\n    STOCKS_TOP_GAINER_FAIL,\r\n\r\n    STOCKS_TOP_LOSER_REQUEST,\r\n    STOCKS_TOP_LOSER_SUCCESS,\r\n    STOCKS_TOP_LOSER_FAIL,\r\n} from '../constants/stocksConstants'\r\n\r\nexport const listStocks = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: STOCKS_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/stocks/${keyword}`)\r\n\r\n        dispatch({\r\n            type: STOCKS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: STOCKS_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStockDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: STOCKS_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/stocks/${id}/`)\r\n\r\n        dispatch({\r\n            type: STOCKS_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: STOCKS_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStocksTopGainers = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: STOCKS_TOP_GAINER_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/stocks/top-gainers/${keyword}`)\r\n\r\n        dispatch({\r\n            type: STOCKS_TOP_GAINER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: STOCKS_TOP_GAINER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listStocksTopLosers = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: STOCKS_TOP_LOSER_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/stocks/top-losers/${keyword}`)\r\n\r\n        dispatch({\r\n            type: STOCKS_TOP_LOSER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: STOCKS_TOP_LOSER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport StockList from '../components/StockList'\r\nimport { listStocksTopLosers, listStocksTopGainers } from '../actions/stocksAction'\r\n\r\nexport default function HomeScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const stocksTopLosersList = useSelector(state => state.stocksTopLosersList)\r\n\r\n    const stocksTopGainersList = useSelector(state => state.stocksTopGainersList)\r\n\r\n    useEffect(() => {\r\n        dispatch(listStocksTopGainers())\r\n        dispatch(listStocksTopLosers())\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                {(stocksTopLosersList.loading && stocksTopGainersList.loading) ? <Loader /> \r\n                    :\r\n                    (\r\n                        <>\r\n                            <Col sm={12} md={6}>\r\n                                {stocksTopGainersList.error ? <Message variant='danger'>{stocksTopGainersList.error}</Message>\r\n                                        :\r\n                                        <div className=\"py-5\">\r\n                                            <StockList title=\"Stocks: Gainers\" seeMoreLink=\"top-gainers\"ink=\"top-gainers\" stocks={stocksTopGainersList.stocks.stocks?.slice(0, 5)} />\r\n                                        </div>\r\n                                }\r\n                            </Col>\r\n                            <Col sm={12} md={6}>\r\n                                {stocksTopLosersList.error ? <Message variant='danger'>{stocksTopLosersList.error}</Message>\r\n                                    :\r\n                                    <div className=\"py-5\">\r\n                                        <StockList title=\"Stocks: Losers\" seeMoreLink=\"top-losers\" stocks={stocksTopLosersList.stocks.stocks?.slice(0, 5)} />\r\n                                    </div>\r\n                                }\r\n                            </Col>\r\n                        </>\r\n                    )\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, link = '', keywords, extra }) {\r\n\r\n    if (keywords) {\r\n        keywords = keywords.split('?')[1].split('&')[0]\r\n    }\r\n\r\n    const page_lower_index = Math.max((page - 1) - (extra / 2), 0)\r\n    const page_upper_index = Math.min((page - 1) + (extra / 2), pages - 1)\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n\r\n            {page > 1 && (\r\n                    <>\r\n                        <LinkContainer\r\n                            key=\"first\"\r\n                            to={`/${link}/?${keywords}&page=${1}`}\r\n                        >\r\n                            <Pagination.Item>First</Pagination.Item>\r\n                        </LinkContainer>\r\n                        <LinkContainer\r\n                            key=\"prev\"\r\n                            to={`/${link}/?${keywords}&page=${page - 1}`}\r\n                        >\r\n                            <Pagination.Item>Prev</Pagination.Item>\r\n                        </LinkContainer>\r\n                    </>\r\n                )\r\n            }\r\n\r\n            {[...Array(page_upper_index - page_lower_index + 1)\r\n            .fill()\r\n            .map((x, i) => page_lower_index + i)\r\n            ]\r\n                .map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={`/${link}/?${keywords}&page=${x + 1}`}\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n\r\n            <LinkContainer\r\n                key=\"next\"\r\n                to={`/${link}/?${keywords}&page=${page + 1}`}\r\n            >\r\n                <Pagination.Item>Next</Pagination.Item>\r\n            </LinkContainer>\r\n\r\n            <LinkContainer\r\n                key=\"last\"\r\n                to={`/${link}/?${keywords}&page=${pages}`}\r\n            >\r\n                <Pagination.Item>Last</Pagination.Item>\r\n            </LinkContainer>\r\n\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport StockList from '../components/StockList'\r\nimport { listStocks } from '../actions/stocksAction'\r\n\r\n\r\nexport default function SearchScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const stocksList = useSelector(state => state.stocksList)\r\n    const { error, loading, stocks, page, pages } = stocksList\r\n\r\n    let keyword = history.location.search\r\n    const searchKey = keyword.split('?keyword=')[1].split('&')[0]\r\n\r\n    useEffect(() => {\r\n        dispatch(listStocks(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    if (loading)\r\n        return <Loader />\r\n    return (\r\n        <div>\r\n            {error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                <div>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className=\"py-5\">\r\n                                <StockList title={`Stocks Search: ${searchKey}`} showAddToPortfolioButton={true} stocks={stocks} />\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Paginate page={page} pages={pages} keywords={keyword} link=\"search\" extra={2} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Button, ListGroup } from 'react-bootstrap'\r\nimport { FaRegStar } from \"react-icons/fa\"\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listStockDetails } from '../actions/stocksAction'\r\n\r\nexport default function StockDetailsScreen({ location, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const stockDetailsList = useSelector(state => state.stockDetailsList)\r\n    const { loading, error, stock } = stockDetailsList\r\n\r\n    const prev = location.search ? location.search.split('?prev=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        dispatch(listStockDetails(match.params.id))\r\n\r\n    }, [dispatch, match])\r\n\r\n    return (\r\n        <div>\r\n            <Link to={prev} className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <div>\r\n                            <Row>\r\n                                <Col sm={12} md={10}>\r\n                                    <h4>{stock.name} ({ stock.symbol })</h4>\r\n                                </Col>\r\n                                <Col sm={12} md={2}>\r\n                                    <Button variant=\"outline-info\" size=\"sm\" className=\"d-flex align-items-center\">\r\n                                        <FaRegStar size=\"1rem\" className=\"mr-2\" />  Add To Portfolio\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h2>\r\n                                        {stock.price}\r\n                                        <small className={stock.change_amount > 0 ? \"text-success\" : \"text-danger\"}>\r\n                                            {stock.change_amount > 0 ? \"+\" + stock.change_amount : stock.change_amount}\r\n                                        </small>\r\n                                        <small className={stock.change_percent > 0 ? \"text-success\" : \"text-danger\"}>\r\n                                            ({stock.change_percent > 0 ? \"+\" + stock.change_percent + \"%\" : stock.change_percent + \"%\"})\r\n                                        </small>\r\n                                    </h2>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Previous Close</div>\r\n                                            <div>{stock.prev_close_value ? stock.prev_close_value : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Open</div>\r\n                                            <div>{stock.open_value ? stock.open_value : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Bid</div>\r\n                                            <div>{stock.bid_value ? stock.bid_value : \"N/A\"} X {stock.bid_quantity ? stock.bid_quantity : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Ask</div>\r\n                                            <div>{stock.ask_value ? stock.ask_value : \"N/A\"} X {stock.ask_quantity ? stock.ask_quantity : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Day's Range</div>\r\n                                            <div>{stock.days_low ? stock.days_low : \"N/A\"} - {stock.days_high ? stock.days_high : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Day's Range</div>\r\n                                            <div>{stock.fifty_two_week_low ? stock.fifty_two_week_low : \"N/A\"} - {stock.fifty_two_week_high ? stock.fifty_two_week_high : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Volume</div>\r\n                                            <div>{stock.volume ? stock.volume : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Avg. Volume</div>\r\n                                            <div>{stock.avg_volume ? stock.avg_volume : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Market Cap</div>\r\n                                            <div>{stock.market_cap ? stock.market_cap : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>PE Ratio</div>\r\n                                            <div>{stock.pe_ratio ? stock.pe_ratio : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>EPS Ratio</div>\r\n                                            <div>{stock.eps_ratio ? stock.eps_ratio : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item className=\"d-flex justify-content-between\">\r\n                                            <div>Forward Dividend & Yield</div>\r\n                                            <div>{stock.forward_dividend_yield ? stock.forward_dividend_yield : \"N/A\"}</div>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport StockList from '../components/StockList'\r\nimport { listStocksTopGainers } from '../actions/stocksAction'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TopGainersScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const stocksTopGainersList = useSelector(state => state.stocksTopGainersList)\r\n\r\n    let history = useHistory()\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listStocksTopGainers(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    {stocksTopGainersList.loading ? <Loader />\r\n                        : stocksTopGainersList.error ? <Message variant='danger'>{stocksTopGainersList.error}</Message>\r\n                            :\r\n                            <div className=\"py-5\">\r\n                                <StockList title={`Stocks: Gainers (Top ${stocksTopGainersList.stocks.total})`} showAddToPortfolioButton={true} stocks={stocksTopGainersList.stocks.stocks} />\r\n                                <Paginate page={stocksTopGainersList.stocks.page} pages={stocksTopGainersList.stocks.pages} link=\"top-gainers\" keywords={keyword} extra={2} />\r\n                            </div>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport StockList from '../components/StockList'\r\nimport { listStocksTopLosers } from '../actions/stocksAction'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function TopLosersScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const stocksTopLosersList = useSelector(state => state.stocksTopLosersList)\r\n\r\n    let history = useHistory()\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listStocksTopLosers(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    {stocksTopLosersList.loading ? <Loader />\r\n                        : stocksTopLosersList.error ? <Message variant='danger'>{stocksTopLosersList.error}</Message>\r\n                            :\r\n                            <div className=\"py-5\">\r\n                                <StockList title={`Stocks: Losers (Top ${stocksTopLosersList.stocks.total})`} showAddToPortfolioButton={true} stocks={stocksTopLosersList.stocks.stocks} />\r\n                                <Paginate page={stocksTopLosersList.stocks.page} pages={stocksTopLosersList.stocks.pages} link=\"top-losers\" keywords={keyword} extra={2} />\r\n                            </div>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center py-5\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nexport default function LogInScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    if (loading) \r\n        return <Loader />\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    if (loading)\r\n        return <Loader />\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login?redirect=portfolio')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    if (loading)\r\n        return <Loader />\r\n    return (\r\n        <Row>\r\n            <Col className=\"py-5\">\r\n                <h2>User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React from 'react'\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nexport default function ModalForm({ show, onClose, title, body }) {\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {title}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {body}\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport ColoredCodecNumber from '../components/ColoredCodecNumber'\r\nimport Message from '../components/Message'\r\nimport ModalForm from '../components/ModalForm'\r\nimport { createPortfolio, getPortfolio, deletePortfolio, updatePortfolioDetails } from '../actions/portfolioAction'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function PortfolioScreen() {\r\n\r\n    let history = useHistory()\r\n    const path = history.location.search ? history.location.pathname + history.location.search : history.location.pathname\r\n\r\n    const [createModalShow, setCreateModalShow] = useState(false);\r\n    const [updateModalShow, setUpdateModalShow] = useState(false);\r\n    const [portfolioName, setPortfolioName] = useState('')\r\n    const [selectedPortfolio, setSelectedPortfolio] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n    const portfolioList = useSelector(state => state.portfolioList)\r\n    const { error, loading, portfolios } = portfolioList\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        dispatch(getPortfolio())\r\n    }, [])\r\n\r\n    const handelCreatePortfolioSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createPortfolio({ 'name': portfolioName}))\r\n        setPortfolioName('')\r\n        setCreateModalShow(false)\r\n    }\r\n\r\n    const handelDeletePortfolio = (e) => {\r\n        e.preventDefault()\r\n        const portfolio_id = e.target.value\r\n        dispatch(deletePortfolio(portfolio_id))\r\n    }\r\n\r\n    const handelUpdatePortfolioSubmit  = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updatePortfolioDetails({ id: selectedPortfolio, portfolio: { 'name': portfolioName }}))\r\n        setPortfolioName('')\r\n        setUpdateModalShow(false)\r\n    }\r\n\r\n    if(loading) \r\n        return <Loader />\r\n    return (\r\n        <>  \r\n            {error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                (\r\n                    <>\r\n                        <ModalForm\r\n                            show={createModalShow}\r\n                            title=\"Create New Portfolio\"\r\n                            body={\r\n                                (\r\n                                    <Form onSubmit={handelCreatePortfolioSubmit}>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Portfolio Name</Form.Label>\r\n                                            <Form.Control \r\n                                                type=\"name\" \r\n                                                placeholder=\"Enter Portfolio Name\" \r\n                                                value={portfolioName}\r\n                                                onChange={(e) => setPortfolioName(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"pt-3 text-right border-top\" controlId=\"formBasicEmail\">\r\n                                            <Button onClick={() => setCreateModalShow(false)} variant=\"secondary\">\r\n                                                Close\r\n                                            </Button>\r\n                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                )\r\n                            }\r\n                        />\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-between\">\r\n                            <Button \r\n                                onClick={() => setCreateModalShow(true)} \r\n                                variant=\"info\" \r\n                                size=\"sm\" \r\n                                className=\"my-3 d-flex align-items-center text-center\">\r\n                                Create New Portfolio\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                        {portfolios.length > 0 &&\r\n                            <Row>\r\n                                <Col>\r\n                                    <Table striped responsive hover size=\"sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th><small>Name</small></th>\r\n                                                <th><small>Symbols</small></th>\r\n                                                <th><small>Market Value</small></th>\r\n                                                <th><small>Day Change</small></th>\r\n                                                <th><small>Day Change%</small></th>\r\n                                                <th><small>Total Change</small></th>\r\n                                                <th><small>Total Change %</small></th>\r\n                                                <th></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {portfolios?.map(portfolio => (\r\n                                                <tr key={portfolio.id}>\r\n                                                    <td>\r\n                                                        <Link to={`/portfolio/${portfolio.id}/?prev=${path}`}>{portfolio.name}</Link>\r\n                                                        <div><small>Last Updated at: {portfolio.updatedAt}</small></div>\r\n                                                    </td>\r\n                                                    <td>{portfolio.symbols}</td>\r\n                                                    <td>{portfolio.market_value}</td>\r\n                                                    <td><ColoredCodecNumber value={portfolio.day_change_value} /></td>\r\n                                                    <td><ColoredCodecNumber value={portfolio.day_change_percent} prefix=\"%\" /></td>\r\n                                                    <td><ColoredCodecNumber value={portfolio.total_change} /></td>\r\n                                                    <td><ColoredCodecNumber value={portfolio.total_change_percent} prefix=\"%\" /></td>\r\n                                                    <td>\r\n                                                        <ModalForm\r\n                                                            show={updateModalShow}\r\n                                                            title=\"Update Portfolio\"\r\n                                                            body={\r\n                                                                (\r\n                                                                    <Form onSubmit={handelUpdatePortfolioSubmit}>\r\n                                                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                                                            <Form.Label>Portfolio Name</Form.Label>\r\n                                                                            <Form.Control\r\n                                                                                type=\"name\"\r\n                                                                                placeholder=\"Enter Portfolio Name\"\r\n                                                                                value={portfolioName}\r\n                                                                                onChange={(e) => setPortfolioName(e.target.value)}\r\n                                                                            />\r\n                                                                        </Form.Group>\r\n                                                                        <Form.Group className=\"pt-3 text-right border-top\" controlId=\"formBasicEmail\">\r\n                                                                            <Button onClick={() => { setUpdateModalShow(false);}} variant=\"secondary\">\r\n                                                                                Close\r\n                                                                            </Button>\r\n                                                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                                                Submit\r\n                                                                            </Button>\r\n                                                                        </Form.Group>\r\n                                                                    </Form>\r\n                                                                )\r\n                                                            }\r\n                                                        />\r\n                                                        <Button\r\n                                                            variant=\"info\"\r\n                                                            value={portfolio.id}\r\n                                                            onClick={() => { \r\n                                                                setSelectedPortfolio(portfolio.id); \r\n                                                                setPortfolioName(portfolio.name); \r\n                                                                setUpdateModalShow(true); \r\n                                                            }}\r\n                                                            size=\"sm\"\r\n                                                            className=\"my-3 mr-3\">\r\n                                                            Update\r\n                                                        </Button>\r\n                                                        <Button\r\n                                                            variant=\"info\"\r\n                                                            value={portfolio.id}\r\n                                                            onClick={handelDeletePortfolio}\r\n                                                            size=\"sm\"\r\n                                                            className=\"my-3\">\r\n                                                            Delete\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Col>\r\n                            </Row>\r\n                        }\r\n                </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n    PORTFOLIO_CREATE_REQUEST,\r\n    PORTFOLIO_CREATE_SUCCESS,\r\n    PORTFOLIO_CREATE_FAIL,\r\n\r\n    PORTFOLIO_REQUEST,\r\n    PORTFOLIO_SUCCESS,\r\n    PORTFOLIO_FAIL,\r\n\r\n    PORTFOLIO_DELETE_REQUEST,\r\n    PORTFOLIO_DELETE_SUCCESS,\r\n    PORTFOLIO_DELETE_FAIL,\r\n\r\n    PORTFOLIO_DETAILS_REQUEST,\r\n    PORTFOLIO_DETAILS_SUCCESS,\r\n    PORTFOLIO_DETAILS_FAIL,\r\n\r\n    PORTFOLIO_RECORD_CREATE_REQUEST,\r\n    PORTFOLIO_RECORD_CREATE_SUCCESS,\r\n    PORTFOLIO_RECORD_CREATE_FAIL,\r\n\r\n    PORTFOLIO_RECORD_DELETE_REQUEST,\r\n    PORTFOLIO_RECORD_DELETE_SUCCESS,\r\n    PORTFOLIO_RECORD_DELETE_FAIL,\r\n\r\n    PORTFOLIO_DETAILS_UPDATE_REQUEST,\r\n    PORTFOLIO_DETAILS_UPDATE_SUCCESS,\r\n    PORTFOLIO_DETAILS_UPDATE_FAIL,\r\n\r\n    PORTFOLIO_RECORD_UPDATE_REQUEST,\r\n    PORTFOLIO_RECORD_UPDATE_SUCCESS,\r\n    PORTFOLIO_RECORD_UPDATE_FAIL\r\n\r\n} from '../constants/portfolioConstants'\r\n\r\n\r\nexport const createPortfolio = (portfolio) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/portfolio/`,\r\n            portfolio,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getPortfolio = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/portfolio/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deletePortfolio = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/portfolio/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_DELETE_SUCCESS,\r\n            payload: id\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getPortfolioDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/portfolio/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createPortfolioRecord = ({ id, record }) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/portfolio/${id}/record/`,\r\n            record,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePortfolioRecord = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/portfolio/record/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_DELETE_SUCCESS,\r\n            payload: id\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updatePortfolioDetails = ({ id, portfolio }) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/portfolio/${id}/`,\r\n            portfolio,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_DETAILS_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePortfolioRecord = ({ id, record }) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/portfolio/record/${id}/`,\r\n            record,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PORTFOLIO_RECORD_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Form, Table, ListGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DatePicker from \"react-datepicker\"\r\nimport Loader from '../components/Loader'\r\nimport ColoredCodecNumber from '../components/ColoredCodecNumber'\r\nimport Message from '../components/Message'\r\nimport ModalForm from '../components/ModalForm'\r\nimport { getPortfolioDetails, createPortfolioRecord, updatePortfolioRecord, deletePortfolioRecord } from '../actions/portfolioAction'\r\nimport { listStocks } from '../actions/stocksAction'\r\n\r\nexport default function PortfolioDetailsScreen({ location, history, match }) {\r\n\r\n    const [createModalShow, setCreateModalShow] = useState(false)\r\n    const [updateModalShow, setUpdateModalShow] = useState(false)\r\n    \r\n    const symbolInputRef = useRef()\r\n    const symbolSelectRef = useRef()\r\n    const [searchStocks, setSearchStocks] = useState([])\r\n\r\n    const [selectedRecord, setSelectedRecord] = useState(\"\")\r\n\r\n    const [symbol, setSymbol] = useState('')\r\n    const [tradeDate, setTradeDate] = useState(new Date())\r\n    const today = new Date()\r\n    const [shares, setShares] = useState(0)\r\n    const [costPerShares, setCostPerShares] = useState(0)\r\n    const [notes, setNotes] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const portfolioDetails = useSelector(state => state.portfolioDetails)\r\n    const { error, loading, portfolio } = portfolioDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const stocksList = useSelector(state => state.stocksList)\r\n\r\n    const prev = location.search ? location.search.split('?prev=')[1] : '/'\r\n    const path = history.location.search ? history.location.pathname + history.location.search : history.location.pathname\r\n\r\n    useEffect(() => {\r\n        if (!userInfo)\r\n            history.push('/login')\r\n\r\n        dispatch(getPortfolioDetails(match.params.id))\r\n    }, [userInfo, match])\r\n\r\n    const handelCreateRecordSubmit = (e) => {\r\n        e.preventDefault()\r\n        let record = {\r\n            symbol: symbol,\r\n            trade_date: tradeDate,\r\n            shares: shares,\r\n            cost_per_share: costPerShares,\r\n            notes: notes\r\n        }\r\n        dispatch(createPortfolioRecord({id: match.params.id, record: record}))\r\n        setCreateModalShow(false)\r\n        setSymbol('')\r\n        setTradeDate(today)\r\n        setShares('')\r\n        setCostPerShares('')\r\n        setNotes('')\r\n    }\r\n\r\n    const handelUpdateRecordSubmit = (e) => {\r\n        e.preventDefault()\r\n        let record = {\r\n            symbol: symbol,\r\n            trade_date: tradeDate,\r\n            shares: shares,\r\n            cost_per_share: costPerShares,\r\n            notes: notes\r\n        }\r\n        console.log({ id: selectedRecord, record: record })\r\n        dispatch(updatePortfolioRecord({ id: selectedRecord, record: record }))\r\n        setUpdateModalShow(false)\r\n        setSymbol('')\r\n        setTradeDate(today)\r\n        setShares('')\r\n        setCostPerShares('')\r\n        setNotes('')\r\n    }\r\n\r\n    const handelDeleteRecord = (e) => {\r\n        e.preventDefault()\r\n        dispatch(deletePortfolioRecord(e.target.value))\r\n    }\r\n\r\n    const handelSearchSymbols = (e) => {\r\n        symbolSelectRef.current.style.display = \"flex\"\r\n        dispatch(listStocks(`?keyword=${e.target.value}`))\r\n        setSearchStocks(stocksList.stocks.slice(0, 5))\r\n    }\r\n\r\n    if (loading)\r\n        return <Loader />\r\n    return (\r\n        <>\r\n            <Link to={prev} className='btn btn-light my-3'>Go Back</Link>\r\n            {error ? <Message variant='danger'>{error}</Message>\r\n                :\r\n                (\r\n                    <>\r\n                        <ModalForm\r\n                            show={createModalShow}\r\n                            title=\"Create New Record\"\r\n                            body={\r\n                                (\r\n                                    <Form onSubmit={handelCreateRecordSubmit}>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Stock Symbol</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Search Stock Symbol / Name\"\r\n                                                ref={symbolInputRef}\r\n                                                onChange={handelSearchSymbols}\r\n                                            />\r\n                                            <ListGroup ref={symbolSelectRef} style={{ position: \"absolute\", width: \"calc(100% - 32px)\", boxShadow: \"0px 1px 5px 0px #00000044\", zIndex: 1 }}>\r\n                                                {searchStocks.map(stock => (\r\n                                                    <ListGroup.Item \r\n                                                        key={stock.symbol}\r\n                                                        value={stock.symbol}\r\n                                                        style={{ cursor: \"pointer\" }}\r\n                                                        onClick={(e) => {\r\n                                                            symbolInputRef.current.value = stock.symbol;\r\n                                                            setSymbol(stock.symbol)\r\n                                                            symbolSelectRef.current.style.display = \"none\"\r\n                                                        }}>\r\n                                                        {stock.name} ({stock.symbol})\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Trading Date</Form.Label>\r\n                                            <DatePicker\r\n                                                selected={tradeDate}\r\n                                                onChange={(e) => {\r\n                                                    setTradeDate(e);\r\n                                                }}\r\n                                                className=\"form-control\"\r\n                                                maxDate={today}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Shares</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"number\"\r\n                                                step=\"any\"\r\n                                                placeholder=\"Shares\"\r\n                                                value={shares}\r\n                                                onChange={(e) => setShares(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Cost Per Share</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"number\"\r\n                                                step=\"any\"\r\n                                                placeholder=\"Cost Per Share\"\r\n                                                value={costPerShares}\r\n                                                onChange={(e) => setCostPerShares(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3\">\r\n                                            <Form.Label>Notes</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Notes\"\r\n                                                value={notes}\r\n                                                onChange={(e) => setNotes(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"pt-3 text-right border-top\">\r\n                                            <Button onClick={() => setCreateModalShow(false)} variant=\"secondary\">\r\n                                                Close\r\n                                            </Button>\r\n                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                )\r\n                            }\r\n                        />\r\n                        <Row>\r\n                            <Col className=\"d-flex justify-content-between\">\r\n                                <Button onClick={() => setCreateModalShow(true)} variant=\"info\" size=\"sm\" className=\"my-3 d-flex align-items-center text-center\">\r\n                                    Create New Record\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <Table striped responsive hover size=\"sm\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th><small>Symbols</small></th>\r\n                                            <th><small>Change</small></th>\r\n                                            <th><small>Shares</small></th>\r\n                                            <th><small>Cost / Share</small></th>\r\n                                            <th><small>Market Value</small></th>\r\n                                            <th><small>Day Gain</small></th>\r\n                                            <th><small>Total Gain</small></th>\r\n                                            <th><small>Notes</small></th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {portfolio.records?.map(record => (\r\n                                            <tr key={record.id}>\r\n                                                <td>\r\n                                                    <Link to={`/stock/${record.symbol}/?prev=${path}`}>{record.symbol}</Link>\r\n                                                    <div><small>Price: {record.symbol_price}</small></div>\r\n                                                    <div><small>Traded on: {record.trade_date}</small></div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <ColoredCodecNumber value={record.change_value} />\r\n                                                    <div><small><ColoredCodecNumber value={record.change_percent} prefix=\"%\" /></small></div>\r\n                                                </td>\r\n                                                <td>{record.shares}</td>\r\n                                                <td>{record.cost_per_share}</td>\r\n                                                <td>{record.market_value}</td>\r\n                                                <td>\r\n                                                    <ColoredCodecNumber value={record.gain_value} />\r\n                                                    <div><small><ColoredCodecNumber value={record.gain_percent} prefix=\"%\" /></small></div>\r\n                                                </td>\r\n                                                <td><ColoredCodecNumber value={record.total_gain} /></td>\r\n                                                <td>{record.notes}</td>\r\n                                                <td>\r\n                                                    <ModalForm\r\n                                                        show={updateModalShow}\r\n                                                        onClose={() => setUpdateModalShow(false)}\r\n                                                        title=\"Update Record\"\r\n                                                        body={\r\n                                                            (\r\n                                                                <Form onSubmit={handelUpdateRecordSubmit}>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Stock Symbol</Form.Label>\r\n                                                                        <Form.Control\r\n                                                                            type=\"text\"\r\n                                                                            value={symbol}\r\n                                                                            placeholder=\"Search Stock Symbol / Name\"\r\n                                                                            ref={symbolInputRef}\r\n                                                                            onChange={(e) => e.preventDefault()}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Trading Date</Form.Label>\r\n                                                                        <DatePicker\r\n                                                                            selected={tradeDate}\r\n                                                                            onChange={(e) => {\r\n                                                                                setTradeDate(e);\r\n                                                                            }}\r\n                                                                            className=\"form-control\"\r\n                                                                            maxDate={today}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Shares</Form.Label>\r\n                                                                        <Form.Control\r\n                                                                            type=\"number\"\r\n                                                                            step=\"any\"\r\n                                                                            placeholder=\"Shares\"\r\n                                                                            value={shares}\r\n                                                                            onChange={(e) => setShares(e.target.value)}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Cost Per Share</Form.Label>\r\n                                                                        <Form.Control\r\n                                                                            type=\"number\"\r\n                                                                            step=\"any\"\r\n                                                                            placeholder=\"Cost Per Share\"\r\n                                                                            value={costPerShares}\r\n                                                                            onChange={(e) => setCostPerShares(e.target.value)}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"mb-3\">\r\n                                                                        <Form.Label>Notes</Form.Label>\r\n                                                                        <Form.Control\r\n                                                                            type=\"text\"\r\n                                                                            placeholder=\"Notes\"\r\n                                                                            value={notes}\r\n                                                                            onChange={(e) => setNotes(e.target.value)}\r\n                                                                        />\r\n                                                                    </Form.Group>\r\n                                                                    <Form.Group className=\"pt-3 text-right border-top\">\r\n                                                                        <Button onClick={() => {\r\n                                                                            setSelectedRecord(\"\")\r\n                                                                            setUpdateModalShow(false)\r\n                                                                        }} variant=\"secondary\">\r\n                                                                            Close\r\n                                                                        </Button>\r\n                                                                        <Button variant=\"primary\" type=\"submit\">\r\n                                                                            Submit\r\n                                                                        </Button>\r\n                                                                    </Form.Group>\r\n                                                                </Form>\r\n                                                            )\r\n                                                        }\r\n                                                    />\r\n                                                    <Button\r\n                                                        variant=\"info\"\r\n                                                        value={record.id}\r\n                                                        onClick={() => {\r\n                                                            setSelectedRecord(record.id)\r\n                                                            setSymbol(record.symbol)\r\n                                                            setTradeDate(new Date(record.trade_date))\r\n                                                            setShares(record.shares)\r\n                                                            setCostPerShares(record.cost_per_share)\r\n                                                            setNotes(record.notes)\r\n                                                            setUpdateModalShow(true)\r\n                                                        }}\r\n                                                        size=\"sm\"\r\n                                                        className=\"my-3 mr-3\">\r\n                                                        Update\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        variant=\"info\"\r\n                                                        value={record.id}\r\n                                                        onClick={handelDeleteRecord}\r\n                                                        size=\"sm\"\r\n                                                        className=\"my-3\">\r\n                                                        Delete\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport HomeScreen from './screens/HomeScreen'\nimport SearchScreen from './screens/SearchScreen'\nimport StockDetailsScreen from './screens/StockDetailsScreen'\nimport TopGainersScreen from './screens/TopGainersScreen'\nimport TopLosersScreen from './screens/TopLosersScreen'\nimport LogInScreen from './screens/LogInScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport PortfolioScreen from './screens/PortfolioScreen'\nimport PortfolioDetailsScreen from './screens/PortfolioDetailsScreen'\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <div className=\"App\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/search/' component={SearchScreen} exact />\n          <Route path='/stock/:id' component={StockDetailsScreen} />\n          <Route path='/top-gainers' component={TopGainersScreen} />\n          <Route path='/top-losers' component={TopLosersScreen} />\n          <Route path='/login' component={LogInScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/portfolios' component={PortfolioScreen} />\n          <Route path='/portfolio/:id' component={PortfolioDetailsScreen} />\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App';\nimport './bootstrap.min.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}